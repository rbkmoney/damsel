%%
%% Autogenerated by Thrift Compiler (1.0.0-dev)
%%
%% DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
%%

-module(dmsl_cash_flow_thrift).

-include("dmsl_cash_flow_thrift.hrl").

-export([namespace/0]).
-export([enums/0]).
-export([typedefs/0]).
-export([structs/0]).
-export([services/0]).
-export([typedef_info/1]).
-export([enum_info/1]).
-export([struct_info/1]).
-export([record_name/1]).
-export([functions/1]).
-export([function_info/3]).

-export_type([namespace/0]).
-export_type([typedef_name/0]).
-export_type([enum_name/0]).
-export_type([struct_name/0]).
-export_type([exception_name/0]).
-export_type([service_name/0]).
-export_type([function_name/0]).

-export_type([enum_info/0]).
-export_type([struct_info/0]).

-export_type([
    'AccountID'/0,
    'MerchantCashFlowAccount'/0,
    'ProviderCashFlowAccount'/0,
    'SystemCashFlowAccount'/0,
    'ExternalCashFlowAccount'/0
]).
-export_type([
    'CashFlow'/0,
    'CashFlowTransaction'/0,
    'CashFlowTransactionAccount'/0,
    'TransactionAccount'/0,
    'MerchantTransactionAccount'/0,
    'MerchantTransactionAccountOwner'/0,
    'ProviderTransactionAccount'/0,
    'ProviderTransactionAccountOwner'/0,
    'SystemTransactionAccount'/0,
    'ExternalTransactionAccount'/0
]).

-type namespace() :: 'cash_flow'.

%%
%% typedefs
%%
-type typedef_name() ::
    'AccountID' |
    'MerchantCashFlowAccount' |
    'ProviderCashFlowAccount' |
    'SystemCashFlowAccount' |
    'ExternalCashFlowAccount'.

-type 'AccountID'() :: dmsl_domain_thrift:'AccountID'().
-type 'MerchantCashFlowAccount'() :: atom().
-type 'ProviderCashFlowAccount'() :: atom().
-type 'SystemCashFlowAccount'() :: atom().
-type 'ExternalCashFlowAccount'() :: atom().

%%
%% enums
%%
-type enum_name() :: none().

%%
%% structs, unions and exceptions
%%
-type struct_name() ::
    'CashFlow' |
    'CashFlowTransaction' |
    'CashFlowTransactionAccount' |
    'TransactionAccount' |
    'MerchantTransactionAccount' |
    'MerchantTransactionAccountOwner' |
    'ProviderTransactionAccount' |
    'ProviderTransactionAccountOwner' |
    'SystemTransactionAccount' |
    'ExternalTransactionAccount'.

-type exception_name() :: none().

%% struct 'CashFlow'
-type 'CashFlow'() :: #'cash_flow_CashFlow'{}.

%% struct 'CashFlowTransaction'
-type 'CashFlowTransaction'() :: #'cash_flow_CashFlowTransaction'{}.

%% struct 'CashFlowTransactionAccount'
-type 'CashFlowTransactionAccount'() :: #'cash_flow_CashFlowTransactionAccount'{}.

%% union 'TransactionAccount'
-type 'TransactionAccount'() ::
    {'merchant', 'MerchantTransactionAccount'()} |
    {'provider', 'ProviderTransactionAccount'()} |
    {'system', 'SystemTransactionAccount'()} |
    {'external', 'ExternalTransactionAccount'()}.

%% struct 'MerchantTransactionAccount'
-type 'MerchantTransactionAccount'() :: #'cash_flow_MerchantTransactionAccount'{}.

%% struct 'MerchantTransactionAccountOwner'
-type 'MerchantTransactionAccountOwner'() :: #'cash_flow_MerchantTransactionAccountOwner'{}.

%% struct 'ProviderTransactionAccount'
-type 'ProviderTransactionAccount'() :: #'cash_flow_ProviderTransactionAccount'{}.

%% struct 'ProviderTransactionAccountOwner'
-type 'ProviderTransactionAccountOwner'() :: #'cash_flow_ProviderTransactionAccountOwner'{}.

%% struct 'SystemTransactionAccount'
-type 'SystemTransactionAccount'() :: #'cash_flow_SystemTransactionAccount'{}.

%% struct 'ExternalTransactionAccount'
-type 'ExternalTransactionAccount'() :: #'cash_flow_ExternalTransactionAccount'{}.

%%
%% services and functions
%%
-type service_name() :: none().

-type function_name() :: none().


-type struct_flavour() :: struct | exception | union.
-type field_num() :: pos_integer().
-type field_name() :: atom().
-type field_req() :: required | optional | undefined.

-type type_ref() :: {module(), atom()}.
-type field_type() ::
    bool | byte | i16 | i32 | i64 | string | double |
    {enum, type_ref()} |
    {struct, struct_flavour(), type_ref()} |
    {list, field_type()} |
    {set, field_type()} |
    {map, field_type(), field_type()}.

-type struct_field_info() ::
    {field_num(), field_req(), field_type(), field_name(), any()}.
-type struct_info() ::
    {struct, struct_flavour(), [struct_field_info()]}.

-type enum_choice() :: none().

-type enum_field_info() ::
    {enum_choice(), integer()}.
-type enum_info() ::
    {enum, [enum_field_info()]}.

-spec typedefs() -> [typedef_name()].

typedefs() ->
    [
        'AccountID',
        'MerchantCashFlowAccount',
        'ProviderCashFlowAccount',
        'SystemCashFlowAccount',
        'ExternalCashFlowAccount'
    ].

-spec enums() -> [].

enums() ->
    [].

-spec structs() -> [struct_name()].

structs() ->
    [
        'CashFlow',
        'CashFlowTransaction',
        'CashFlowTransactionAccount',
        'TransactionAccount',
        'MerchantTransactionAccount',
        'MerchantTransactionAccountOwner',
        'ProviderTransactionAccount',
        'ProviderTransactionAccountOwner',
        'SystemTransactionAccount',
        'ExternalTransactionAccount'
    ].

-spec services() -> [].

services() ->
    [].

-spec namespace() -> namespace().

namespace() ->
    'cash_flow'.

-spec typedef_info(typedef_name()) -> field_type() | no_return().

typedef_info('AccountID') ->
    i64;

typedef_info('MerchantCashFlowAccount') ->
    {enum, {dmsl_domain_thrift, 'MerchantCashFlowAccount'}};

typedef_info('ProviderCashFlowAccount') ->
    {enum, {dmsl_domain_thrift, 'ProviderCashFlowAccount'}};

typedef_info('SystemCashFlowAccount') ->
    {enum, {dmsl_domain_thrift, 'SystemCashFlowAccount'}};

typedef_info('ExternalCashFlowAccount') ->
    {enum, {dmsl_domain_thrift, 'ExternalCashFlowAccount'}};

typedef_info(_) -> erlang:error(badarg).

-spec enum_info(_) -> no_return().

enum_info(_) -> erlang:error(badarg).

-spec struct_info(struct_name() | exception_name()) -> struct_info() | no_return().

struct_info('CashFlow') ->
    {struct, struct, [
        {1, required, {list, {struct, struct, {dmsl_cash_flow_thrift, 'CashFlowTransaction'}}}, 'transactions', undefined}
    ]};

struct_info('CashFlowTransaction') ->
    {struct, struct, [
        {1, required, {struct, struct, {dmsl_cash_flow_thrift, 'CashFlowTransactionAccount'}}, 'source', undefined},
        {2, required, {struct, struct, {dmsl_cash_flow_thrift, 'CashFlowTransactionAccount'}}, 'destination', undefined},
        {3, required, {struct, struct, {dmsl_domain_thrift, 'Cash'}}, 'volume', undefined},
        {4, optional, string, 'details', undefined}
    ]};

struct_info('CashFlowTransactionAccount') ->
    {struct, struct, [
        {1, required, {struct, union, {dmsl_cash_flow_thrift, 'TransactionAccount'}}, 'transaction_account', undefined},
        {2, required, i64, 'account_id', undefined}
    ]};

struct_info('TransactionAccount') ->
    {struct, union, [
        {1, optional, {struct, struct, {dmsl_cash_flow_thrift, 'MerchantTransactionAccount'}}, 'merchant', undefined},
        {2, optional, {struct, struct, {dmsl_cash_flow_thrift, 'ProviderTransactionAccount'}}, 'provider', undefined},
        {3, optional, {struct, struct, {dmsl_cash_flow_thrift, 'SystemTransactionAccount'}}, 'system', undefined},
        {4, optional, {struct, struct, {dmsl_cash_flow_thrift, 'ExternalTransactionAccount'}}, 'external', undefined}
    ]};

struct_info('MerchantTransactionAccount') ->
    {struct, struct, [
        {1, required, {enum, {dmsl_domain_thrift, 'MerchantCashFlowAccount'}}, 'account_type', undefined},
        {2, required, {struct, struct, {dmsl_cash_flow_thrift, 'MerchantTransactionAccountOwner'}}, 'account_owner', undefined}
    ]};

struct_info('MerchantTransactionAccountOwner') ->
    {struct, struct, [
        {1, required, string, 'party_id', undefined},
        {2, required, string, 'shop_id', undefined}
    ]};

struct_info('ProviderTransactionAccount') ->
    {struct, struct, [
        {1, required, {enum, {dmsl_domain_thrift, 'ProviderCashFlowAccount'}}, 'account_type', undefined},
        {2, required, {struct, struct, {dmsl_cash_flow_thrift, 'ProviderTransactionAccountOwner'}}, 'account_owner', undefined}
    ]};

struct_info('ProviderTransactionAccountOwner') ->
    {struct, struct, [
        {1, required, {struct, struct, {dmsl_domain_thrift, 'ProviderRef'}}, 'provider_ref', undefined},
        {2, required, {struct, struct, {dmsl_domain_thrift, 'ProviderTerminalRef'}}, 'terminal_ref', undefined}
    ]};

struct_info('SystemTransactionAccount') ->
    {struct, struct, [
        {1, required, {enum, {dmsl_domain_thrift, 'SystemCashFlowAccount'}}, 'account_type', undefined}
    ]};

struct_info('ExternalTransactionAccount') ->
    {struct, struct, [
        {1, required, {enum, {dmsl_domain_thrift, 'ExternalCashFlowAccount'}}, 'account_type', undefined}
    ]};

struct_info(_) -> erlang:error(badarg).

-spec record_name(struct_name() | exception_name()) -> atom() | no_return().

record_name('CashFlow') ->
    'cash_flow_CashFlow';

record_name('CashFlowTransaction') ->
    'cash_flow_CashFlowTransaction';

record_name('CashFlowTransactionAccount') ->
    'cash_flow_CashFlowTransactionAccount';

record_name('MerchantTransactionAccount') ->
    'cash_flow_MerchantTransactionAccount';

record_name('MerchantTransactionAccountOwner') ->
    'cash_flow_MerchantTransactionAccountOwner';

record_name('ProviderTransactionAccount') ->
    'cash_flow_ProviderTransactionAccount';

record_name('ProviderTransactionAccountOwner') ->
    'cash_flow_ProviderTransactionAccountOwner';

record_name('SystemTransactionAccount') ->
    'cash_flow_SystemTransactionAccount';

record_name('ExternalTransactionAccount') ->
    'cash_flow_ExternalTransactionAccount';

record_name(_) -> error(badarg).

-spec functions(_) -> no_return().

functions(_) -> error(badarg).

-spec function_info(_,_,_) -> no_return().

function_info(_Service, _Function, _InfoType) -> erlang:error(badarg).
