%%
%% Autogenerated by Thrift Compiler (1.0.0-dev)
%%
%% DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
%%

-module(dmsl_claim_management_thrift).

-include("dmsl_claim_management_thrift.hrl").

-export([namespace/0]).
-export([enums/0]).
-export([typedefs/0]).
-export([structs/0]).
-export([services/0]).
-export([typedef_info/1]).
-export([enum_info/1]).
-export([struct_info/1]).
-export([record_name/1]).
-export([functions/1]).
-export([function_info/3]).

-export_type([namespace/0]).
-export_type([typedef_name/0]).
-export_type([enum_name/0]).
-export_type([struct_name/0]).
-export_type([exception_name/0]).
-export_type([service_name/0]).
-export_type([function_name/0]).

-export_type([enum_info/0]).
-export_type([struct_info/0]).

-export_type([
    'ClaimID'/0,
    'ModificationID'/0,
    'ClaimRevision'/0,
    'ContinuationToken'/0,
    'FileID'/0,
    'DocumentID'/0,
    'CommentID'/0,
    'UserID'/0,
    'CashRegisterID'/0,
    'MetadataKey'/0,
    'MetadataValue'/0,
    'Metadata'/0,
    'ClaimChangeset'/0,
    'ModificationChangeset'/0
]).
-export_type([
    'UserInfo'/0,
    'UserType'/0,
    'InternalUser'/0,
    'ExternalUser'/0,
    'ScheduleChanged'/0,
    'PayoutToolInfoChanged'/0,
    'ShopContractChanged'/0,
    'PayoutToolParams'/0,
    'ContractParams'/0,
    'ShopModificationUnit'/0,
    'ShopContractModification'/0,
    'ScheduleModification'/0,
    'ShopAccountParams'/0,
    'ShopModification'/0,
    'ShopParams'/0,
    'CashRegisterModificationUnit'/0,
    'CashRegisterModification'/0,
    'CashRegisterParams'/0,
    'ContractorModificationUnit'/0,
    'ContractorModification'/0,
    'ContractModificationUnit'/0,
    'ContractModification'/0,
    'ContractTermination'/0,
    'ContractAdjustmentModificationUnit'/0,
    'ContractAdjustmentParams'/0,
    'ContractAdjustmentModification'/0,
    'PayoutToolModificationUnit'/0,
    'PayoutToolModification'/0,
    'DocumentModification'/0,
    'DocumentCreated'/0,
    'DocumentModificationUnit'/0,
    'FileModification'/0,
    'FileCreated'/0,
    'FileModificationUnit'/0,
    'CommentModification'/0,
    'CommentCreated'/0,
    'CommentModificationUnit'/0,
    'StatusChanged'/0,
    'StatusModification'/0,
    'StatusModificationUnit'/0,
    'ClaimModification'/0,
    'PartyModification'/0,
    'ModificationUnit'/0,
    'Modification'/0,
    'Claim'/0,
    'ClaimStatus'/0,
    'ClaimPending'/0,
    'ClaimReview'/0,
    'ClaimPendingAcceptance'/0,
    'ClaimAccepted'/0,
    'ClaimDenied'/0,
    'ClaimRevoked'/0,
    'ClaimSearchQuery'/0,
    'ClaimSearchResponse'/0,
    'Event'/0,
    'Change'/0,
    'ClaimCreated'/0,
    'ClaimUpdated'/0,
    'ClaimStatusChanged'/0
]).
-export_type([
    'ClaimNotFound'/0,
    'PartyNotFound'/0,
    'InvalidClaimRevision'/0,
    'BadContinuationToken'/0,
    'LimitExceeded'/0,
    'ChangesetConflict'/0,
    'InvalidChangeset'/0,
    'InvalidClaimStatus'/0,
    'MetadataKeyNotFound'/0
]).

-type namespace() :: 'claim_management'.

%%
%% typedefs
%%
-type typedef_name() ::
    'ClaimID' |
    'ModificationID' |
    'ClaimRevision' |
    'ContinuationToken' |
    'FileID' |
    'DocumentID' |
    'CommentID' |
    'UserID' |
    'CashRegisterID' |
    'MetadataKey' |
    'MetadataValue' |
    'Metadata' |
    'ClaimChangeset' |
    'ModificationChangeset'.

-type 'ClaimID'() :: integer().
-type 'ModificationID'() :: integer().
-type 'ClaimRevision'() :: integer().
-type 'ContinuationToken'() :: binary().
-type 'FileID'() :: dmsl_base_thrift:'ID'().
-type 'DocumentID'() :: dmsl_base_thrift:'ID'().
-type 'CommentID'() :: dmsl_base_thrift:'ID'().
-type 'UserID'() :: dmsl_base_thrift:'ID'().
-type 'CashRegisterID'() :: dmsl_base_thrift:'ID'().
-type 'MetadataKey'() :: binary().
-type 'MetadataValue'() :: dmsl_msgpack_thrift:'Value'().
-type 'Metadata'() :: #{'MetadataKey'() => 'MetadataValue'()}.
-type 'ClaimChangeset'() :: ['ModificationUnit'()].
-type 'ModificationChangeset'() :: ['Modification'()].

%%
%% enums
%%
-type enum_name() :: none().

%%
%% structs, unions and exceptions
%%
-type struct_name() ::
    'UserInfo' |
    'UserType' |
    'InternalUser' |
    'ExternalUser' |
    'ScheduleChanged' |
    'PayoutToolInfoChanged' |
    'ShopContractChanged' |
    'PayoutToolParams' |
    'ContractParams' |
    'ShopModificationUnit' |
    'ShopContractModification' |
    'ScheduleModification' |
    'ShopAccountParams' |
    'ShopModification' |
    'ShopParams' |
    'CashRegisterModificationUnit' |
    'CashRegisterModification' |
    'CashRegisterParams' |
    'ContractorModificationUnit' |
    'ContractorModification' |
    'ContractModificationUnit' |
    'ContractModification' |
    'ContractTermination' |
    'ContractAdjustmentModificationUnit' |
    'ContractAdjustmentParams' |
    'ContractAdjustmentModification' |
    'PayoutToolModificationUnit' |
    'PayoutToolModification' |
    'DocumentModification' |
    'DocumentCreated' |
    'DocumentModificationUnit' |
    'FileModification' |
    'FileCreated' |
    'FileModificationUnit' |
    'CommentModification' |
    'CommentCreated' |
    'CommentModificationUnit' |
    'StatusChanged' |
    'StatusModification' |
    'StatusModificationUnit' |
    'ClaimModification' |
    'PartyModification' |
    'ModificationUnit' |
    'Modification' |
    'Claim' |
    'ClaimStatus' |
    'ClaimPending' |
    'ClaimReview' |
    'ClaimPendingAcceptance' |
    'ClaimAccepted' |
    'ClaimDenied' |
    'ClaimRevoked' |
    'ClaimSearchQuery' |
    'ClaimSearchResponse' |
    'Event' |
    'Change' |
    'ClaimCreated' |
    'ClaimUpdated' |
    'ClaimStatusChanged'.

-type exception_name() ::
    'ClaimNotFound' |
    'PartyNotFound' |
    'InvalidClaimRevision' |
    'BadContinuationToken' |
    'LimitExceeded' |
    'ChangesetConflict' |
    'InvalidChangeset' |
    'InvalidClaimStatus' |
    'MetadataKeyNotFound'.

%% struct 'UserInfo'
-type 'UserInfo'() :: #'claim_management_UserInfo'{}.

%% union 'UserType'
-type 'UserType'() ::
    {'internal_user', 'InternalUser'()} |
    {'external_user', 'ExternalUser'()}.

%% struct 'InternalUser'
-type 'InternalUser'() :: #'claim_management_InternalUser'{}.

%% struct 'ExternalUser'
-type 'ExternalUser'() :: #'claim_management_ExternalUser'{}.

%% struct 'ScheduleChanged'
-type 'ScheduleChanged'() :: #'claim_management_ScheduleChanged'{}.

%% struct 'PayoutToolInfoChanged'
-type 'PayoutToolInfoChanged'() :: #'claim_management_PayoutToolInfoChanged'{}.

%% struct 'ShopContractChanged'
-type 'ShopContractChanged'() :: #'claim_management_ShopContractChanged'{}.

%% struct 'PayoutToolParams'
-type 'PayoutToolParams'() :: #'claim_management_PayoutToolParams'{}.

%% struct 'ContractParams'
-type 'ContractParams'() :: #'claim_management_ContractParams'{}.

%% struct 'ShopModificationUnit'
-type 'ShopModificationUnit'() :: #'claim_management_ShopModificationUnit'{}.

%% struct 'ShopContractModification'
-type 'ShopContractModification'() :: #'claim_management_ShopContractModification'{}.

%% struct 'ScheduleModification'
-type 'ScheduleModification'() :: #'claim_management_ScheduleModification'{}.

%% struct 'ShopAccountParams'
-type 'ShopAccountParams'() :: #'claim_management_ShopAccountParams'{}.

%% union 'ShopModification'
-type 'ShopModification'() ::
    {'creation', 'ShopParams'()} |
    {'category_modification', dmsl_domain_thrift:'CategoryRef'()} |
    {'details_modification', dmsl_domain_thrift:'ShopDetails'()} |
    {'contract_modification', 'ShopContractModification'()} |
    {'payout_tool_modification', dmsl_domain_thrift:'PayoutToolID'()} |
    {'location_modification', dmsl_domain_thrift:'ShopLocation'()} |
    {'shop_account_creation', 'ShopAccountParams'()} |
    {'payout_schedule_modification', 'ScheduleModification'()} |
    {'cash_register_modification_unit', 'CashRegisterModificationUnit'()}.

%% struct 'ShopParams'
-type 'ShopParams'() :: #'claim_management_ShopParams'{}.

%% struct 'CashRegisterModificationUnit'
-type 'CashRegisterModificationUnit'() :: #'claim_management_CashRegisterModificationUnit'{}.

%% union 'CashRegisterModification'
-type 'CashRegisterModification'() ::
    {'creation', 'CashRegisterParams'()}.

%% struct 'CashRegisterParams'
-type 'CashRegisterParams'() :: #'claim_management_CashRegisterParams'{}.

%% struct 'ContractorModificationUnit'
-type 'ContractorModificationUnit'() :: #'claim_management_ContractorModificationUnit'{}.

%% union 'ContractorModification'
-type 'ContractorModification'() ::
    {'creation', dmsl_domain_thrift:'Contractor'()} |
    {'identification_level_modification', atom()}.

%% struct 'ContractModificationUnit'
-type 'ContractModificationUnit'() :: #'claim_management_ContractModificationUnit'{}.

%% union 'ContractModification'
-type 'ContractModification'() ::
    {'creation', 'ContractParams'()} |
    {'termination', 'ContractTermination'()} |
    {'adjustment_modification', 'ContractAdjustmentModificationUnit'()} |
    {'payout_tool_modification', 'PayoutToolModificationUnit'()} |
    {'legal_agreement_binding', dmsl_domain_thrift:'LegalAgreement'()} |
    {'report_preferences_modification', dmsl_domain_thrift:'ReportPreferences'()} |
    {'contractor_modification', dmsl_domain_thrift:'ContractorID'()}.

%% struct 'ContractTermination'
-type 'ContractTermination'() :: #'claim_management_ContractTermination'{}.

%% struct 'ContractAdjustmentModificationUnit'
-type 'ContractAdjustmentModificationUnit'() :: #'claim_management_ContractAdjustmentModificationUnit'{}.

%% struct 'ContractAdjustmentParams'
-type 'ContractAdjustmentParams'() :: #'claim_management_ContractAdjustmentParams'{}.

%% union 'ContractAdjustmentModification'
-type 'ContractAdjustmentModification'() ::
    {'creation', 'ContractAdjustmentParams'()}.

%% struct 'PayoutToolModificationUnit'
-type 'PayoutToolModificationUnit'() :: #'claim_management_PayoutToolModificationUnit'{}.

%% union 'PayoutToolModification'
-type 'PayoutToolModification'() ::
    {'creation', 'PayoutToolParams'()} |
    {'info_modification', dmsl_domain_thrift:'PayoutToolInfo'()}.

%% union 'DocumentModification'
-type 'DocumentModification'() ::
    {'creation', 'DocumentCreated'()}.

%% struct 'DocumentCreated'
-type 'DocumentCreated'() :: #'claim_management_DocumentCreated'{}.

%% struct 'DocumentModificationUnit'
-type 'DocumentModificationUnit'() :: #'claim_management_DocumentModificationUnit'{}.

%% union 'FileModification'
-type 'FileModification'() ::
    {'creation', 'FileCreated'()}.

%% struct 'FileCreated'
-type 'FileCreated'() :: #'claim_management_FileCreated'{}.

%% struct 'FileModificationUnit'
-type 'FileModificationUnit'() :: #'claim_management_FileModificationUnit'{}.

%% union 'CommentModification'
-type 'CommentModification'() ::
    {'creation', 'CommentCreated'()}.

%% struct 'CommentCreated'
-type 'CommentCreated'() :: #'claim_management_CommentCreated'{}.

%% struct 'CommentModificationUnit'
-type 'CommentModificationUnit'() :: #'claim_management_CommentModificationUnit'{}.

%% struct 'StatusChanged'
-type 'StatusChanged'() :: #'claim_management_StatusChanged'{}.

%% union 'StatusModification'
-type 'StatusModification'() ::
    {'change', 'StatusChanged'()}.

%% struct 'StatusModificationUnit'
-type 'StatusModificationUnit'() :: #'claim_management_StatusModificationUnit'{}.

%% union 'ClaimModification'
-type 'ClaimModification'() ::
    {'document_modification', 'DocumentModificationUnit'()} |
    {'file_modification', 'FileModificationUnit'()} |
    {'comment_modification', 'CommentModificationUnit'()} |
    {'status_modification', 'StatusModificationUnit'()}.

%% union 'PartyModification'
-type 'PartyModification'() ::
    {'contractor_modification', 'ContractorModificationUnit'()} |
    {'contract_modification', 'ContractModificationUnit'()} |
    {'shop_modification', 'ShopModificationUnit'()}.

%% struct 'ModificationUnit'
-type 'ModificationUnit'() :: #'claim_management_ModificationUnit'{}.

%% union 'Modification'
-type 'Modification'() ::
    {'party_modification', 'PartyModification'()} |
    {'claim_modification', 'ClaimModification'()}.

%% struct 'Claim'
-type 'Claim'() :: #'claim_management_Claim'{}.

%% union 'ClaimStatus'
-type 'ClaimStatus'() ::
    {'pending', 'ClaimPending'()} |
    {'review', 'ClaimReview'()} |
    {'pending_acceptance', 'ClaimPendingAcceptance'()} |
    {'accepted', 'ClaimAccepted'()} |
    {'denied', 'ClaimDenied'()} |
    {'revoked', 'ClaimRevoked'()}.

%% struct 'ClaimPending'
-type 'ClaimPending'() :: #'claim_management_ClaimPending'{}.

%% struct 'ClaimReview'
-type 'ClaimReview'() :: #'claim_management_ClaimReview'{}.

%% struct 'ClaimPendingAcceptance'
-type 'ClaimPendingAcceptance'() :: #'claim_management_ClaimPendingAcceptance'{}.

%% struct 'ClaimAccepted'
-type 'ClaimAccepted'() :: #'claim_management_ClaimAccepted'{}.

%% struct 'ClaimDenied'
-type 'ClaimDenied'() :: #'claim_management_ClaimDenied'{}.

%% struct 'ClaimRevoked'
-type 'ClaimRevoked'() :: #'claim_management_ClaimRevoked'{}.

%% struct 'ClaimSearchQuery'
-type 'ClaimSearchQuery'() :: #'claim_management_ClaimSearchQuery'{}.

%% struct 'ClaimSearchResponse'
-type 'ClaimSearchResponse'() :: #'claim_management_ClaimSearchResponse'{}.

%% struct 'Event'
-type 'Event'() :: #'claim_management_Event'{}.

%% union 'Change'
-type 'Change'() ::
    {'created', 'ClaimCreated'()} |
    {'updated', 'ClaimUpdated'()} |
    {'status_changed', 'ClaimStatusChanged'()}.

%% struct 'ClaimCreated'
-type 'ClaimCreated'() :: #'claim_management_ClaimCreated'{}.

%% struct 'ClaimUpdated'
-type 'ClaimUpdated'() :: #'claim_management_ClaimUpdated'{}.

%% struct 'ClaimStatusChanged'
-type 'ClaimStatusChanged'() :: #'claim_management_ClaimStatusChanged'{}.

%% exception 'ClaimNotFound'
-type 'ClaimNotFound'() :: #'claim_management_ClaimNotFound'{}.

%% exception 'PartyNotFound'
-type 'PartyNotFound'() :: #'claim_management_PartyNotFound'{}.

%% exception 'InvalidClaimRevision'
-type 'InvalidClaimRevision'() :: #'claim_management_InvalidClaimRevision'{}.

%% exception 'BadContinuationToken'
-type 'BadContinuationToken'() :: #'claim_management_BadContinuationToken'{}.

%% exception 'LimitExceeded'
-type 'LimitExceeded'() :: #'claim_management_LimitExceeded'{}.

%% exception 'ChangesetConflict'
-type 'ChangesetConflict'() :: #'claim_management_ChangesetConflict'{}.

%% exception 'InvalidChangeset'
-type 'InvalidChangeset'() :: #'claim_management_InvalidChangeset'{}.

%% exception 'InvalidClaimStatus'
-type 'InvalidClaimStatus'() :: #'claim_management_InvalidClaimStatus'{}.

%% exception 'MetadataKeyNotFound'
-type 'MetadataKeyNotFound'() :: #'claim_management_MetadataKeyNotFound'{}.

%%
%% services and functions
%%
-type service_name() ::
    'ClaimManagement' |
    'ClaimCommitter'.

-type function_name() ::
    'ClaimManagement_service_functions'() |
    'ClaimCommitter_service_functions'().

-type 'ClaimManagement_service_functions'() ::
    'CreateClaim' |
    'GetClaim' |
    'SearchClaims' |
    'AcceptClaim' |
    'UpdateClaim' |
    'RequestClaimReview' |
    'RequestClaimChanges' |
    'DenyClaim' |
    'RevokeClaim' |
    'GetMetadata' |
    'SetMetadata' |
    'RemoveMetadata'.

-export_type(['ClaimManagement_service_functions'/0]).

-type 'ClaimCommitter_service_functions'() ::
    'Accept' |
    'Commit'.

-export_type(['ClaimCommitter_service_functions'/0]).


-type struct_flavour() :: struct | exception | union.
-type field_num() :: pos_integer().
-type field_name() :: atom().
-type field_req() :: required | optional | undefined.

-type type_ref() :: {module(), atom()}.
-type field_type() ::
    bool | byte | i16 | i32 | i64 | string | double |
    {enum, type_ref()} |
    {struct, struct_flavour(), type_ref()} |
    {list, field_type()} |
    {set, field_type()} |
    {map, field_type(), field_type()}.

-type struct_field_info() ::
    {field_num(), field_req(), field_type(), field_name(), any()}.
-type struct_info() ::
    {struct, struct_flavour(), [struct_field_info()]}.

-type enum_choice() :: none().

-type enum_field_info() ::
    {enum_choice(), integer()}.
-type enum_info() ::
    {enum, [enum_field_info()]}.

-spec typedefs() -> [typedef_name()].

typedefs() ->
    [
        'ClaimID',
        'ModificationID',
        'ClaimRevision',
        'ContinuationToken',
        'FileID',
        'DocumentID',
        'CommentID',
        'UserID',
        'CashRegisterID',
        'MetadataKey',
        'MetadataValue',
        'Metadata',
        'ClaimChangeset',
        'ModificationChangeset'
    ].

-spec enums() -> [].

enums() ->
    [].

-spec structs() -> [struct_name()].

structs() ->
    [
        'UserInfo',
        'UserType',
        'InternalUser',
        'ExternalUser',
        'ScheduleChanged',
        'PayoutToolInfoChanged',
        'ShopContractChanged',
        'PayoutToolParams',
        'ContractParams',
        'ShopModificationUnit',
        'ShopContractModification',
        'ScheduleModification',
        'ShopAccountParams',
        'ShopModification',
        'ShopParams',
        'CashRegisterModificationUnit',
        'CashRegisterModification',
        'CashRegisterParams',
        'ContractorModificationUnit',
        'ContractorModification',
        'ContractModificationUnit',
        'ContractModification',
        'ContractTermination',
        'ContractAdjustmentModificationUnit',
        'ContractAdjustmentParams',
        'ContractAdjustmentModification',
        'PayoutToolModificationUnit',
        'PayoutToolModification',
        'DocumentModification',
        'DocumentCreated',
        'DocumentModificationUnit',
        'FileModification',
        'FileCreated',
        'FileModificationUnit',
        'CommentModification',
        'CommentCreated',
        'CommentModificationUnit',
        'StatusChanged',
        'StatusModification',
        'StatusModificationUnit',
        'ClaimModification',
        'PartyModification',
        'ModificationUnit',
        'Modification',
        'Claim',
        'ClaimStatus',
        'ClaimPending',
        'ClaimReview',
        'ClaimPendingAcceptance',
        'ClaimAccepted',
        'ClaimDenied',
        'ClaimRevoked',
        'ClaimSearchQuery',
        'ClaimSearchResponse',
        'Event',
        'Change',
        'ClaimCreated',
        'ClaimUpdated',
        'ClaimStatusChanged'
    ].

-spec services() -> [service_name()].

services() ->
    [
        'ClaimManagement',
        'ClaimCommitter'
    ].

-spec namespace() -> namespace().

namespace() ->
    'claim_management'.

-spec typedef_info(typedef_name()) -> field_type() | no_return().

typedef_info('ClaimID') ->
    i64;

typedef_info('ModificationID') ->
    i64;

typedef_info('ClaimRevision') ->
    i32;

typedef_info('ContinuationToken') ->
    string;

typedef_info('FileID') ->
    string;

typedef_info('DocumentID') ->
    string;

typedef_info('CommentID') ->
    string;

typedef_info('UserID') ->
    string;

typedef_info('CashRegisterID') ->
    string;

typedef_info('MetadataKey') ->
    string;

typedef_info('MetadataValue') ->
    {struct, union, {dmsl_msgpack_thrift, 'Value'}};

typedef_info('Metadata') ->
    {map, string, {struct, union, {dmsl_msgpack_thrift, 'Value'}}};

typedef_info('ClaimChangeset') ->
    {list, {struct, struct, {dmsl_claim_management_thrift, 'ModificationUnit'}}};

typedef_info('ModificationChangeset') ->
    {list, {struct, union, {dmsl_claim_management_thrift, 'Modification'}}};

typedef_info(_) -> erlang:error(badarg).

-spec enum_info(_) -> no_return().

enum_info(_) -> erlang:error(badarg).

-spec struct_info(struct_name() | exception_name()) -> struct_info() | no_return().

struct_info('UserInfo') ->
    {struct, struct, [
        {1, required, string, 'id', undefined},
        {2, required, string, 'email', undefined},
        {3, required, string, 'username', undefined},
        {4, required, {struct, union, {dmsl_claim_management_thrift, 'UserType'}}, 'type', undefined}
    ]};

struct_info('UserType') ->
    {struct, union, [
        {1, optional, {struct, struct, {dmsl_claim_management_thrift, 'InternalUser'}}, 'internal_user', undefined},
        {2, optional, {struct, struct, {dmsl_claim_management_thrift, 'ExternalUser'}}, 'external_user', undefined}
    ]};

struct_info('InternalUser') ->
    {struct, struct, []};

struct_info('ExternalUser') ->
    {struct, struct, []};

struct_info('ScheduleChanged') ->
    {struct, struct, [
        {1, optional, {struct, struct, {dmsl_domain_thrift, 'BusinessScheduleRef'}}, 'schedule', undefined}
    ]};

struct_info('PayoutToolInfoChanged') ->
    {struct, struct, [
        {1, required, string, 'payout_tool_id', undefined},
        {2, required, {struct, union, {dmsl_domain_thrift, 'PayoutToolInfo'}}, 'info', undefined}
    ]};

struct_info('ShopContractChanged') ->
    {struct, struct, [
        {1, required, string, 'contract_id', undefined},
        {2, required, string, 'payout_tool_id', undefined}
    ]};

struct_info('PayoutToolParams') ->
    {struct, struct, [
        {1, required, {struct, struct, {dmsl_domain_thrift, 'CurrencyRef'}}, 'currency', undefined},
        {2, required, {struct, union, {dmsl_domain_thrift, 'PayoutToolInfo'}}, 'tool_info', undefined}
    ]};

struct_info('ContractParams') ->
    {struct, struct, [
        {1, optional, string, 'contractor_id', undefined},
        {2, optional, {struct, struct, {dmsl_domain_thrift, 'ContractTemplateRef'}}, 'template', undefined},
        {3, optional, {struct, struct, {dmsl_domain_thrift, 'PaymentInstitutionRef'}}, 'payment_institution', undefined}
    ]};

struct_info('ShopModificationUnit') ->
    {struct, struct, [
        {1, required, string, 'id', undefined},
        {2, required, {struct, union, {dmsl_claim_management_thrift, 'ShopModification'}}, 'modification', undefined}
    ]};

struct_info('ShopContractModification') ->
    {struct, struct, [
        {1, required, string, 'contract_id', undefined},
        {2, required, string, 'payout_tool_id', undefined}
    ]};

struct_info('ScheduleModification') ->
    {struct, struct, [
        {1, optional, {struct, struct, {dmsl_domain_thrift, 'BusinessScheduleRef'}}, 'schedule', undefined}
    ]};

struct_info('ShopAccountParams') ->
    {struct, struct, [
        {1, required, {struct, struct, {dmsl_domain_thrift, 'CurrencyRef'}}, 'currency', undefined}
    ]};

struct_info('ShopModification') ->
    {struct, union, [
        {1, optional, {struct, struct, {dmsl_claim_management_thrift, 'ShopParams'}}, 'creation', undefined},
        {2, optional, {struct, struct, {dmsl_domain_thrift, 'CategoryRef'}}, 'category_modification', undefined},
        {3, optional, {struct, struct, {dmsl_domain_thrift, 'ShopDetails'}}, 'details_modification', undefined},
        {4, optional, {struct, struct, {dmsl_claim_management_thrift, 'ShopContractModification'}}, 'contract_modification', undefined},
        {5, optional, string, 'payout_tool_modification', undefined},
        {6, optional, {struct, union, {dmsl_domain_thrift, 'ShopLocation'}}, 'location_modification', undefined},
        {7, optional, {struct, struct, {dmsl_claim_management_thrift, 'ShopAccountParams'}}, 'shop_account_creation', undefined},
        {8, optional, {struct, struct, {dmsl_claim_management_thrift, 'ScheduleModification'}}, 'payout_schedule_modification', undefined},
        {9, optional, {struct, struct, {dmsl_claim_management_thrift, 'CashRegisterModificationUnit'}}, 'cash_register_modification_unit', undefined}
    ]};

struct_info('ShopParams') ->
    {struct, struct, [
        {1, required, {struct, struct, {dmsl_domain_thrift, 'CategoryRef'}}, 'category', undefined},
        {2, required, {struct, union, {dmsl_domain_thrift, 'ShopLocation'}}, 'location', undefined},
        {3, required, {struct, struct, {dmsl_domain_thrift, 'ShopDetails'}}, 'details', undefined},
        {4, required, string, 'contract_id', undefined},
        {5, required, string, 'payout_tool_id', undefined}
    ]};

struct_info('CashRegisterModificationUnit') ->
    {struct, struct, [
        {1, required, string, 'id', undefined},
        {2, required, {struct, union, {dmsl_claim_management_thrift, 'CashRegisterModification'}}, 'modification', undefined}
    ]};

struct_info('CashRegisterModification') ->
    {struct, union, [
        {1, optional, {struct, struct, {dmsl_claim_management_thrift, 'CashRegisterParams'}}, 'creation', undefined}
    ]};

struct_info('CashRegisterParams') ->
    {struct, struct, [
        {1, required, {map, string, string}, 'params', undefined}
    ]};

struct_info('ContractorModificationUnit') ->
    {struct, struct, [
        {1, required, string, 'id', undefined},
        {2, required, {struct, union, {dmsl_claim_management_thrift, 'ContractorModification'}}, 'modification', undefined}
    ]};

struct_info('ContractorModification') ->
    {struct, union, [
        {1, optional, {struct, union, {dmsl_domain_thrift, 'Contractor'}}, 'creation', undefined},
        {2, optional, {enum, {dmsl_domain_thrift, 'ContractorIdentificationLevel'}}, 'identification_level_modification', undefined}
    ]};

struct_info('ContractModificationUnit') ->
    {struct, struct, [
        {1, required, string, 'id', undefined},
        {2, required, {struct, union, {dmsl_claim_management_thrift, 'ContractModification'}}, 'modification', undefined}
    ]};

struct_info('ContractModification') ->
    {struct, union, [
        {1, optional, {struct, struct, {dmsl_claim_management_thrift, 'ContractParams'}}, 'creation', undefined},
        {2, optional, {struct, struct, {dmsl_claim_management_thrift, 'ContractTermination'}}, 'termination', undefined},
        {3, optional, {struct, struct, {dmsl_claim_management_thrift, 'ContractAdjustmentModificationUnit'}}, 'adjustment_modification', undefined},
        {4, optional, {struct, struct, {dmsl_claim_management_thrift, 'PayoutToolModificationUnit'}}, 'payout_tool_modification', undefined},
        {5, optional, {struct, struct, {dmsl_domain_thrift, 'LegalAgreement'}}, 'legal_agreement_binding', undefined},
        {6, optional, {struct, struct, {dmsl_domain_thrift, 'ReportPreferences'}}, 'report_preferences_modification', undefined},
        {7, optional, string, 'contractor_modification', undefined}
    ]};

struct_info('ContractTermination') ->
    {struct, struct, [
        {1, optional, string, 'reason', undefined}
    ]};

struct_info('ContractAdjustmentModificationUnit') ->
    {struct, struct, [
        {1, required, string, 'adjustment_id', undefined},
        {2, required, {struct, union, {dmsl_claim_management_thrift, 'ContractAdjustmentModification'}}, 'modification', undefined}
    ]};

struct_info('ContractAdjustmentParams') ->
    {struct, struct, [
        {1, required, {struct, struct, {dmsl_domain_thrift, 'ContractTemplateRef'}}, 'template', undefined}
    ]};

struct_info('ContractAdjustmentModification') ->
    {struct, union, [
        {1, optional, {struct, struct, {dmsl_claim_management_thrift, 'ContractAdjustmentParams'}}, 'creation', undefined}
    ]};

struct_info('PayoutToolModificationUnit') ->
    {struct, struct, [
        {1, required, string, 'payout_tool_id', undefined},
        {2, required, {struct, union, {dmsl_claim_management_thrift, 'PayoutToolModification'}}, 'modification', undefined}
    ]};

struct_info('PayoutToolModification') ->
    {struct, union, [
        {1, optional, {struct, struct, {dmsl_claim_management_thrift, 'PayoutToolParams'}}, 'creation', undefined},
        {2, optional, {struct, union, {dmsl_domain_thrift, 'PayoutToolInfo'}}, 'info_modification', undefined}
    ]};

struct_info('DocumentModification') ->
    {struct, union, [
        {1, optional, {struct, struct, {dmsl_claim_management_thrift, 'DocumentCreated'}}, 'creation', undefined}
    ]};

struct_info('DocumentCreated') ->
    {struct, struct, []};

struct_info('DocumentModificationUnit') ->
    {struct, struct, [
        {1, required, string, 'id', undefined},
        {2, required, {struct, union, {dmsl_claim_management_thrift, 'DocumentModification'}}, 'modification', undefined}
    ]};

struct_info('FileModification') ->
    {struct, union, [
        {1, optional, {struct, struct, {dmsl_claim_management_thrift, 'FileCreated'}}, 'creation', undefined}
    ]};

struct_info('FileCreated') ->
    {struct, struct, []};

struct_info('FileModificationUnit') ->
    {struct, struct, [
        {1, required, string, 'id', undefined},
        {2, required, {struct, union, {dmsl_claim_management_thrift, 'FileModification'}}, 'modification', undefined}
    ]};

struct_info('CommentModification') ->
    {struct, union, [
        {1, optional, {struct, struct, {dmsl_claim_management_thrift, 'CommentCreated'}}, 'creation', undefined}
    ]};

struct_info('CommentCreated') ->
    {struct, struct, []};

struct_info('CommentModificationUnit') ->
    {struct, struct, [
        {1, required, string, 'id', undefined},
        {2, required, {struct, union, {dmsl_claim_management_thrift, 'CommentModification'}}, 'modification', undefined}
    ]};

struct_info('StatusChanged') ->
    {struct, struct, []};

struct_info('StatusModification') ->
    {struct, union, [
        {1, optional, {struct, struct, {dmsl_claim_management_thrift, 'StatusChanged'}}, 'change', undefined}
    ]};

struct_info('StatusModificationUnit') ->
    {struct, struct, [
        {1, required, {struct, union, {dmsl_claim_management_thrift, 'ClaimStatus'}}, 'status', undefined},
        {2, required, {struct, union, {dmsl_claim_management_thrift, 'StatusModification'}}, 'modification', undefined}
    ]};

struct_info('ClaimModification') ->
    {struct, union, [
        {1, optional, {struct, struct, {dmsl_claim_management_thrift, 'DocumentModificationUnit'}}, 'document_modification', undefined},
        {2, optional, {struct, struct, {dmsl_claim_management_thrift, 'FileModificationUnit'}}, 'file_modification', undefined},
        {3, optional, {struct, struct, {dmsl_claim_management_thrift, 'CommentModificationUnit'}}, 'comment_modification', undefined},
        {4, optional, {struct, struct, {dmsl_claim_management_thrift, 'StatusModificationUnit'}}, 'status_modification', undefined}
    ]};

struct_info('PartyModification') ->
    {struct, union, [
        {1, optional, {struct, struct, {dmsl_claim_management_thrift, 'ContractorModificationUnit'}}, 'contractor_modification', undefined},
        {2, optional, {struct, struct, {dmsl_claim_management_thrift, 'ContractModificationUnit'}}, 'contract_modification', undefined},
        {3, optional, {struct, struct, {dmsl_claim_management_thrift, 'ShopModificationUnit'}}, 'shop_modification', undefined}
    ]};

struct_info('ModificationUnit') ->
    {struct, struct, [
        {1, required, i64, 'modification_id', undefined},
        {2, required, string, 'created_at', undefined},
        {3, required, {struct, union, {dmsl_claim_management_thrift, 'Modification'}}, 'modification', undefined},
        {4, required, {struct, struct, {dmsl_claim_management_thrift, 'UserInfo'}}, 'user_info', undefined}
    ]};

struct_info('Modification') ->
    {struct, union, [
        {1, optional, {struct, union, {dmsl_claim_management_thrift, 'PartyModification'}}, 'party_modification', undefined},
        {2, optional, {struct, union, {dmsl_claim_management_thrift, 'ClaimModification'}}, 'claim_modification', undefined}
    ]};

struct_info('Claim') ->
    {struct, struct, [
        {1, required, i64, 'id', undefined},
        {8, required, string, 'party_id', undefined},
        {2, required, {struct, union, {dmsl_claim_management_thrift, 'ClaimStatus'}}, 'status', undefined},
        {3, required, {list, {struct, struct, {dmsl_claim_management_thrift, 'ModificationUnit'}}}, 'changeset', undefined},
        {4, required, i32, 'revision', undefined},
        {5, required, string, 'created_at', undefined},
        {6, optional, string, 'updated_at', undefined},
        {7, optional, {map, string, {struct, union, {dmsl_msgpack_thrift, 'Value'}}}, 'metadata', undefined}
    ]};

struct_info('ClaimStatus') ->
    {struct, union, [
        {1, optional, {struct, struct, {dmsl_claim_management_thrift, 'ClaimPending'}}, 'pending', undefined},
        {2, optional, {struct, struct, {dmsl_claim_management_thrift, 'ClaimReview'}}, 'review', undefined},
        {3, optional, {struct, struct, {dmsl_claim_management_thrift, 'ClaimPendingAcceptance'}}, 'pending_acceptance', undefined},
        {4, optional, {struct, struct, {dmsl_claim_management_thrift, 'ClaimAccepted'}}, 'accepted', undefined},
        {5, optional, {struct, struct, {dmsl_claim_management_thrift, 'ClaimDenied'}}, 'denied', undefined},
        {6, optional, {struct, struct, {dmsl_claim_management_thrift, 'ClaimRevoked'}}, 'revoked', undefined}
    ]};

struct_info('ClaimPending') ->
    {struct, struct, []};

struct_info('ClaimReview') ->
    {struct, struct, []};

struct_info('ClaimPendingAcceptance') ->
    {struct, struct, []};

struct_info('ClaimAccepted') ->
    {struct, struct, []};

struct_info('ClaimDenied') ->
    {struct, struct, [
        {1, optional, string, 'reason', undefined}
    ]};

struct_info('ClaimRevoked') ->
    {struct, struct, [
        {1, optional, string, 'reason', undefined}
    ]};

struct_info('ClaimSearchQuery') ->
    {struct, struct, [
        {1, optional, string, 'party_id', undefined},
        {5, optional, i64, 'claim_id', undefined},
        {2, optional, {list, {struct, union, {dmsl_claim_management_thrift, 'ClaimStatus'}}}, 'statuses', undefined},
        {3, optional, string, 'continuation_token', undefined},
        {4, required, i32, 'limit', undefined}
    ]};

struct_info('ClaimSearchResponse') ->
    {struct, struct, [
        {1, required, {list, {struct, struct, {dmsl_claim_management_thrift, 'Claim'}}}, 'result', undefined},
        {2, optional, string, 'continuation_token', undefined}
    ]};

struct_info('Event') ->
    {struct, struct, [
        {1, required, string, 'occured_at', undefined},
        {2, required, {struct, union, {dmsl_claim_management_thrift, 'Change'}}, 'change', undefined},
        {3, optional, {struct, struct, {dmsl_claim_management_thrift, 'UserInfo'}}, 'user_info', undefined}
    ]};

struct_info('Change') ->
    {struct, union, [
        {1, optional, {struct, struct, {dmsl_claim_management_thrift, 'ClaimCreated'}}, 'created', undefined},
        {2, optional, {struct, struct, {dmsl_claim_management_thrift, 'ClaimUpdated'}}, 'updated', undefined},
        {3, optional, {struct, struct, {dmsl_claim_management_thrift, 'ClaimStatusChanged'}}, 'status_changed', undefined}
    ]};

struct_info('ClaimCreated') ->
    {struct, struct, [
        {1, required, string, 'party_id', undefined},
        {2, required, i64, 'id', undefined},
        {3, required, {list, {struct, union, {dmsl_claim_management_thrift, 'Modification'}}}, 'changeset', undefined},
        {4, required, i32, 'revision', undefined},
        {5, required, string, 'created_at', undefined}
    ]};

struct_info('ClaimUpdated') ->
    {struct, struct, [
        {1, required, string, 'party_id', undefined},
        {2, required, i64, 'id', undefined},
        {3, required, {list, {struct, union, {dmsl_claim_management_thrift, 'Modification'}}}, 'changeset', undefined},
        {4, required, i32, 'revision', undefined},
        {5, required, string, 'updated_at', undefined}
    ]};

struct_info('ClaimStatusChanged') ->
    {struct, struct, [
        {1, required, string, 'party_id', undefined},
        {2, required, i64, 'id', undefined},
        {3, required, {struct, union, {dmsl_claim_management_thrift, 'ClaimStatus'}}, 'status', undefined},
        {4, required, i32, 'revision', undefined},
        {5, required, string, 'updated_at', undefined}
    ]};

struct_info('ClaimNotFound') ->
    {struct, exception, []};

struct_info('PartyNotFound') ->
    {struct, exception, []};

struct_info('InvalidClaimRevision') ->
    {struct, exception, []};

struct_info('BadContinuationToken') ->
    {struct, exception, [
        {1, undefined, string, 'reason', undefined}
    ]};

struct_info('LimitExceeded') ->
    {struct, exception, [
        {1, undefined, string, 'reason', undefined}
    ]};

struct_info('ChangesetConflict') ->
    {struct, exception, [
        {1, required, i64, 'conflicted_id', undefined}
    ]};

struct_info('InvalidChangeset') ->
    {struct, exception, [
        {1, required, string, 'reason', undefined},
        {2, required, {list, {struct, union, {dmsl_claim_management_thrift, 'Modification'}}}, 'invalid_changeset', undefined}
    ]};

struct_info('InvalidClaimStatus') ->
    {struct, exception, [
        {1, required, {struct, union, {dmsl_claim_management_thrift, 'ClaimStatus'}}, 'status', undefined}
    ]};

struct_info('MetadataKeyNotFound') ->
    {struct, exception, []};

struct_info(_) -> erlang:error(badarg).

-spec record_name(struct_name() | exception_name()) -> atom() | no_return().

record_name('UserInfo') ->
    'claim_management_UserInfo';

record_name('InternalUser') ->
    'claim_management_InternalUser';

record_name('ExternalUser') ->
    'claim_management_ExternalUser';

record_name('ScheduleChanged') ->
    'claim_management_ScheduleChanged';

record_name('PayoutToolInfoChanged') ->
    'claim_management_PayoutToolInfoChanged';

record_name('ShopContractChanged') ->
    'claim_management_ShopContractChanged';

record_name('PayoutToolParams') ->
    'claim_management_PayoutToolParams';

record_name('ContractParams') ->
    'claim_management_ContractParams';

record_name('ShopModificationUnit') ->
    'claim_management_ShopModificationUnit';

record_name('ShopContractModification') ->
    'claim_management_ShopContractModification';

record_name('ScheduleModification') ->
    'claim_management_ScheduleModification';

record_name('ShopAccountParams') ->
    'claim_management_ShopAccountParams';

record_name('ShopParams') ->
    'claim_management_ShopParams';

record_name('CashRegisterModificationUnit') ->
    'claim_management_CashRegisterModificationUnit';

record_name('CashRegisterParams') ->
    'claim_management_CashRegisterParams';

record_name('ContractorModificationUnit') ->
    'claim_management_ContractorModificationUnit';

record_name('ContractModificationUnit') ->
    'claim_management_ContractModificationUnit';

record_name('ContractTermination') ->
    'claim_management_ContractTermination';

record_name('ContractAdjustmentModificationUnit') ->
    'claim_management_ContractAdjustmentModificationUnit';

record_name('ContractAdjustmentParams') ->
    'claim_management_ContractAdjustmentParams';

record_name('PayoutToolModificationUnit') ->
    'claim_management_PayoutToolModificationUnit';

record_name('DocumentCreated') ->
    'claim_management_DocumentCreated';

record_name('DocumentModificationUnit') ->
    'claim_management_DocumentModificationUnit';

record_name('FileCreated') ->
    'claim_management_FileCreated';

record_name('FileModificationUnit') ->
    'claim_management_FileModificationUnit';

record_name('CommentCreated') ->
    'claim_management_CommentCreated';

record_name('CommentModificationUnit') ->
    'claim_management_CommentModificationUnit';

record_name('StatusChanged') ->
    'claim_management_StatusChanged';

record_name('StatusModificationUnit') ->
    'claim_management_StatusModificationUnit';

record_name('ModificationUnit') ->
    'claim_management_ModificationUnit';

record_name('Claim') ->
    'claim_management_Claim';

record_name('ClaimPending') ->
    'claim_management_ClaimPending';

record_name('ClaimReview') ->
    'claim_management_ClaimReview';

record_name('ClaimPendingAcceptance') ->
    'claim_management_ClaimPendingAcceptance';

record_name('ClaimAccepted') ->
    'claim_management_ClaimAccepted';

record_name('ClaimDenied') ->
    'claim_management_ClaimDenied';

record_name('ClaimRevoked') ->
    'claim_management_ClaimRevoked';

record_name('ClaimSearchQuery') ->
    'claim_management_ClaimSearchQuery';

record_name('ClaimSearchResponse') ->
    'claim_management_ClaimSearchResponse';

record_name('Event') ->
    'claim_management_Event';

record_name('ClaimCreated') ->
    'claim_management_ClaimCreated';

record_name('ClaimUpdated') ->
    'claim_management_ClaimUpdated';

record_name('ClaimStatusChanged') ->
    'claim_management_ClaimStatusChanged';

record_name('ClaimNotFound') ->
    'claim_management_ClaimNotFound';

record_name('PartyNotFound') ->
    'claim_management_PartyNotFound';

record_name('InvalidClaimRevision') ->
    'claim_management_InvalidClaimRevision';

record_name('BadContinuationToken') ->
    'claim_management_BadContinuationToken';

record_name('LimitExceeded') ->
    'claim_management_LimitExceeded';

record_name('ChangesetConflict') ->
    'claim_management_ChangesetConflict';

record_name('InvalidChangeset') ->
    'claim_management_InvalidChangeset';

record_name('InvalidClaimStatus') ->
    'claim_management_InvalidClaimStatus';

record_name('MetadataKeyNotFound') ->
    'claim_management_MetadataKeyNotFound';

record_name(_) -> error(badarg).

-spec functions(service_name()) -> [function_name()] | no_return().

functions('ClaimManagement') ->
    [
        'CreateClaim',
        'GetClaim',
        'SearchClaims',
        'AcceptClaim',
        'UpdateClaim',
        'RequestClaimReview',
        'RequestClaimChanges',
        'DenyClaim',
        'RevokeClaim',
        'GetMetadata',
        'SetMetadata',
        'RemoveMetadata'
    ];

functions('ClaimCommitter') ->
    [
        'Accept',
        'Commit'
    ];

functions(_) -> error(badarg).

-spec function_info(service_name(), function_name(), params_type | reply_type | exceptions) ->
    struct_info() | no_return().

function_info('ClaimManagement', 'CreateClaim', params_type) ->
    {struct, struct, [
        {1, undefined, string, 'party_id', undefined},
        {2, undefined, {list, {struct, union, {dmsl_claim_management_thrift, 'Modification'}}}, 'changeset', undefined}
    ]};
function_info('ClaimManagement', 'CreateClaim', reply_type) ->
    {struct, struct, {dmsl_claim_management_thrift, 'Claim'}};
function_info('ClaimManagement', 'CreateClaim', exceptions) ->
    {struct, struct, [
        {1, undefined, {struct, exception, {dmsl_claim_management_thrift, 'InvalidChangeset'}}, 'ex1', undefined}
    ]};
function_info('ClaimManagement', 'GetClaim', params_type) ->
    {struct, struct, [
        {1, undefined, string, 'party_id', undefined},
        {2, undefined, i64, 'id', undefined}
    ]};
function_info('ClaimManagement', 'GetClaim', reply_type) ->
    {struct, struct, {dmsl_claim_management_thrift, 'Claim'}};
function_info('ClaimManagement', 'GetClaim', exceptions) ->
    {struct, struct, [
        {1, undefined, {struct, exception, {dmsl_claim_management_thrift, 'ClaimNotFound'}}, 'ex1', undefined}
    ]};
function_info('ClaimManagement', 'SearchClaims', params_type) ->
    {struct, struct, [
        {1, undefined, {struct, struct, {dmsl_claim_management_thrift, 'ClaimSearchQuery'}}, 'claim_request', undefined}
    ]};
function_info('ClaimManagement', 'SearchClaims', reply_type) ->
    {struct, struct, {dmsl_claim_management_thrift, 'ClaimSearchResponse'}};
function_info('ClaimManagement', 'SearchClaims', exceptions) ->
    {struct, struct, [
        {1, undefined, {struct, exception, {dmsl_claim_management_thrift, 'LimitExceeded'}}, 'ex1', undefined},
        {2, undefined, {struct, exception, {dmsl_claim_management_thrift, 'BadContinuationToken'}}, 'ex2', undefined}
    ]};
function_info('ClaimManagement', 'AcceptClaim', params_type) ->
    {struct, struct, [
        {1, undefined, string, 'party_id', undefined},
        {2, undefined, i64, 'id', undefined},
        {3, undefined, i32, 'revision', undefined}
    ]};
function_info('ClaimManagement', 'AcceptClaim', reply_type) ->
    {struct, struct, []};
function_info('ClaimManagement', 'AcceptClaim', exceptions) ->
    {struct, struct, [
        {1, undefined, {struct, exception, {dmsl_claim_management_thrift, 'ClaimNotFound'}}, 'ex1', undefined},
        {2, undefined, {struct, exception, {dmsl_claim_management_thrift, 'InvalidClaimStatus'}}, 'ex2', undefined},
        {3, undefined, {struct, exception, {dmsl_claim_management_thrift, 'InvalidClaimRevision'}}, 'ex3', undefined}
    ]};
function_info('ClaimManagement', 'UpdateClaim', params_type) ->
    {struct, struct, [
        {1, undefined, string, 'party_id', undefined},
        {2, undefined, i64, 'id', undefined},
        {3, undefined, i32, 'revision', undefined},
        {4, undefined, {list, {struct, union, {dmsl_claim_management_thrift, 'Modification'}}}, 'changeset', undefined}
    ]};
function_info('ClaimManagement', 'UpdateClaim', reply_type) ->
    {struct, struct, []};
function_info('ClaimManagement', 'UpdateClaim', exceptions) ->
    {struct, struct, [
        {1, undefined, {struct, exception, {dmsl_claim_management_thrift, 'ClaimNotFound'}}, 'ex1', undefined},
        {2, undefined, {struct, exception, {dmsl_claim_management_thrift, 'InvalidClaimStatus'}}, 'ex2', undefined},
        {3, undefined, {struct, exception, {dmsl_claim_management_thrift, 'InvalidClaimRevision'}}, 'ex3', undefined},
        {4, undefined, {struct, exception, {dmsl_claim_management_thrift, 'ChangesetConflict'}}, 'ex4', undefined},
        {5, undefined, {struct, exception, {dmsl_claim_management_thrift, 'InvalidChangeset'}}, 'ex5', undefined}
    ]};
function_info('ClaimManagement', 'RequestClaimReview', params_type) ->
    {struct, struct, [
        {1, undefined, string, 'party_id', undefined},
        {2, undefined, i64, 'id', undefined},
        {3, undefined, i32, 'revision', undefined}
    ]};
function_info('ClaimManagement', 'RequestClaimReview', reply_type) ->
    {struct, struct, []};
function_info('ClaimManagement', 'RequestClaimReview', exceptions) ->
    {struct, struct, [
        {1, undefined, {struct, exception, {dmsl_claim_management_thrift, 'ClaimNotFound'}}, 'ex1', undefined},
        {2, undefined, {struct, exception, {dmsl_claim_management_thrift, 'InvalidClaimStatus'}}, 'ex2', undefined},
        {3, undefined, {struct, exception, {dmsl_claim_management_thrift, 'InvalidClaimRevision'}}, 'ex3', undefined}
    ]};
function_info('ClaimManagement', 'RequestClaimChanges', params_type) ->
    {struct, struct, [
        {1, undefined, string, 'party_id', undefined},
        {2, undefined, i64, 'id', undefined},
        {3, undefined, i32, 'revision', undefined}
    ]};
function_info('ClaimManagement', 'RequestClaimChanges', reply_type) ->
    {struct, struct, []};
function_info('ClaimManagement', 'RequestClaimChanges', exceptions) ->
    {struct, struct, [
        {1, undefined, {struct, exception, {dmsl_claim_management_thrift, 'ClaimNotFound'}}, 'ex1', undefined},
        {2, undefined, {struct, exception, {dmsl_claim_management_thrift, 'InvalidClaimStatus'}}, 'ex2', undefined},
        {3, undefined, {struct, exception, {dmsl_claim_management_thrift, 'InvalidClaimRevision'}}, 'ex3', undefined}
    ]};
function_info('ClaimManagement', 'DenyClaim', params_type) ->
    {struct, struct, [
        {1, undefined, string, 'party_id', undefined},
        {2, undefined, i64, 'id', undefined},
        {3, undefined, i32, 'revision', undefined},
        {4, undefined, string, 'reason', undefined}
    ]};
function_info('ClaimManagement', 'DenyClaim', reply_type) ->
    {struct, struct, []};
function_info('ClaimManagement', 'DenyClaim', exceptions) ->
    {struct, struct, [
        {1, undefined, {struct, exception, {dmsl_claim_management_thrift, 'ClaimNotFound'}}, 'ex1', undefined},
        {2, undefined, {struct, exception, {dmsl_claim_management_thrift, 'InvalidClaimStatus'}}, 'ex2', undefined},
        {3, undefined, {struct, exception, {dmsl_claim_management_thrift, 'InvalidClaimRevision'}}, 'ex3', undefined}
    ]};
function_info('ClaimManagement', 'RevokeClaim', params_type) ->
    {struct, struct, [
        {1, undefined, string, 'party_id', undefined},
        {2, undefined, i64, 'id', undefined},
        {3, undefined, i32, 'revision', undefined},
        {4, undefined, string, 'reason', undefined}
    ]};
function_info('ClaimManagement', 'RevokeClaim', reply_type) ->
    {struct, struct, []};
function_info('ClaimManagement', 'RevokeClaim', exceptions) ->
    {struct, struct, [
        {1, undefined, {struct, exception, {dmsl_claim_management_thrift, 'ClaimNotFound'}}, 'ex1', undefined},
        {2, undefined, {struct, exception, {dmsl_claim_management_thrift, 'InvalidClaimStatus'}}, 'ex2', undefined},
        {3, undefined, {struct, exception, {dmsl_claim_management_thrift, 'InvalidClaimRevision'}}, 'ex3', undefined}
    ]};
function_info('ClaimManagement', 'GetMetadata', params_type) ->
    {struct, struct, [
        {1, undefined, string, 'party_id', undefined},
        {2, undefined, i64, 'id', undefined},
        {3, undefined, string, 'key', undefined}
    ]};
function_info('ClaimManagement', 'GetMetadata', reply_type) ->
    {struct, union, {dmsl_msgpack_thrift, 'Value'}};
function_info('ClaimManagement', 'GetMetadata', exceptions) ->
    {struct, struct, [
        {1, undefined, {struct, exception, {dmsl_claim_management_thrift, 'ClaimNotFound'}}, 'ex1', undefined},
        {2, undefined, {struct, exception, {dmsl_claim_management_thrift, 'MetadataKeyNotFound'}}, 'ex2', undefined}
    ]};
function_info('ClaimManagement', 'SetMetadata', params_type) ->
    {struct, struct, [
        {1, undefined, string, 'party_id', undefined},
        {2, undefined, i64, 'id', undefined},
        {3, undefined, string, 'key', undefined},
        {4, undefined, {struct, union, {dmsl_msgpack_thrift, 'Value'}}, 'value', undefined}
    ]};
function_info('ClaimManagement', 'SetMetadata', reply_type) ->
    {struct, struct, []};
function_info('ClaimManagement', 'SetMetadata', exceptions) ->
    {struct, struct, [
        {1, undefined, {struct, exception, {dmsl_claim_management_thrift, 'ClaimNotFound'}}, 'ex1', undefined}
    ]};
function_info('ClaimManagement', 'RemoveMetadata', params_type) ->
    {struct, struct, [
        {1, undefined, string, 'party_id', undefined},
        {2, undefined, i64, 'id', undefined},
        {3, undefined, string, 'key', undefined}
    ]};
function_info('ClaimManagement', 'RemoveMetadata', reply_type) ->
    {struct, struct, []};
function_info('ClaimManagement', 'RemoveMetadata', exceptions) ->
    {struct, struct, [
        {1, undefined, {struct, exception, {dmsl_claim_management_thrift, 'ClaimNotFound'}}, 'ex1', undefined}
    ]};

function_info('ClaimCommitter', 'Accept', params_type) ->
    {struct, struct, [
        {1, undefined, string, 'party_id', undefined},
        {2, undefined, {struct, struct, {dmsl_claim_management_thrift, 'Claim'}}, 'claim', undefined}
    ]};
function_info('ClaimCommitter', 'Accept', reply_type) ->
    {struct, struct, []};
function_info('ClaimCommitter', 'Accept', exceptions) ->
    {struct, struct, [
        {1, undefined, {struct, exception, {dmsl_claim_management_thrift, 'PartyNotFound'}}, 'ex1', undefined},
        {2, undefined, {struct, exception, {dmsl_claim_management_thrift, 'InvalidChangeset'}}, 'ex2', undefined}
    ]};
function_info('ClaimCommitter', 'Commit', params_type) ->
    {struct, struct, [
        {1, undefined, string, 'party_id', undefined},
        {2, undefined, {struct, struct, {dmsl_claim_management_thrift, 'Claim'}}, 'claim', undefined}
    ]};
function_info('ClaimCommitter', 'Commit', reply_type) ->
    {struct, struct, []};
function_info('ClaimCommitter', 'Commit', exceptions) ->
    {struct, struct, []};

function_info(_Service, _Function, _InfoType) -> erlang:error(badarg).
