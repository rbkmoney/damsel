%%
%% Autogenerated by Thrift Compiler (1.0.0-dev)
%%
%% DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
%%

-module(dmsl_proxy_provider_thrift).

-include("dmsl_proxy_provider_thrift.hrl").

-export([namespace/0]).
-export([enums/0]).
-export([typedefs/0]).
-export([structs/0]).
-export([services/0]).
-export([typedef_info/1]).
-export([enum_info/1]).
-export([struct_info/1]).
-export([record_name/1]).
-export([functions/1]).
-export([function_info/3]).

-export_type([namespace/0]).
-export_type([typedef_name/0]).
-export_type([enum_name/0]).
-export_type([struct_name/0]).
-export_type([exception_name/0]).
-export_type([service_name/0]).
-export_type([function_name/0]).

-export_type([enum_info/0]).
-export_type([struct_info/0]).

-export_type([
    'PaymentInfo'/0,
    'Shop'/0,
    'Invoice'/0,
    'InvoicePayment'/0,
    'InvoicePaymentRefund'/0,
    'Cash'/0,
    'Session'/0,
    'Context'/0,
    'ProxyResult'/0,
    'CallbackResult'/0,
    'CallbackProxyResult'/0
]).

-type namespace() :: 'prxprv'.

%%
%% typedefs
%%
-type typedef_name() :: none().


%%
%% enums
%%
-type enum_name() :: none().

%%
%% structs, unions and exceptions
%%
-type struct_name() ::
    'PaymentInfo' |
    'Shop' |
    'Invoice' |
    'InvoicePayment' |
    'InvoicePaymentRefund' |
    'Cash' |
    'Session' |
    'Context' |
    'ProxyResult' |
    'CallbackResult' |
    'CallbackProxyResult'.

-type exception_name() :: none().

%% struct 'PaymentInfo'
-type 'PaymentInfo'() :: #'prxprv_PaymentInfo'{}.

%% struct 'Shop'
-type 'Shop'() :: #'prxprv_Shop'{}.

%% struct 'Invoice'
-type 'Invoice'() :: #'prxprv_Invoice'{}.

%% struct 'InvoicePayment'
-type 'InvoicePayment'() :: #'prxprv_InvoicePayment'{}.

%% struct 'InvoicePaymentRefund'
-type 'InvoicePaymentRefund'() :: #'prxprv_InvoicePaymentRefund'{}.

%% struct 'Cash'
-type 'Cash'() :: #'prxprv_Cash'{}.

%% struct 'Session'
-type 'Session'() :: #'prxprv_Session'{}.

%% struct 'Context'
-type 'Context'() :: #'prxprv_Context'{}.

%% struct 'ProxyResult'
-type 'ProxyResult'() :: #'prxprv_ProxyResult'{}.

%% struct 'CallbackResult'
-type 'CallbackResult'() :: #'prxprv_CallbackResult'{}.

%% struct 'CallbackProxyResult'
-type 'CallbackProxyResult'() :: #'prxprv_CallbackProxyResult'{}.

%%
%% services and functions
%%
-type service_name() ::
    'ProviderProxy' |
    'ProviderProxyHost'.

-type function_name() ::
    'ProviderProxy_service_functions'() |
    'ProviderProxyHost_service_functions'().

-type 'ProviderProxy_service_functions'() ::
    'ProcessPayment' |
    'HandlePaymentCallback'.

-export_type(['ProviderProxy_service_functions'/0]).

-type 'ProviderProxyHost_service_functions'() ::
    'ProcessCallback'.

-export_type(['ProviderProxyHost_service_functions'/0]).


-type struct_flavour() :: struct | exception | union.
-type field_num() :: pos_integer().
-type field_name() :: atom().
-type field_req() :: required | optional | undefined.

-type type_ref() :: {module(), atom()}.
-type field_type() ::
    bool | byte | i16 | i32 | i64 | string | double |
{enum, type_ref()} |
{struct, struct_flavour(), type_ref()} |
{list, field_type()} |
{set, field_type()} |
{map, field_type(), field_type()}.

-type struct_field_info() ::
    {field_num(), field_req(), field_type(), field_name(), any()}.
-type struct_info() ::
    {struct, struct_flavour(), [struct_field_info()]}.

-type enum_choice() :: none().

-type enum_field_info() ::
    {enum_choice(), integer()}.
-type enum_info() ::
    {enum, [enum_field_info()]}.

-spec typedefs() -> [].

typedefs() ->
    [].

-spec enums() -> [].

enums() ->
    [].

-spec structs() -> [struct_name()].

structs() ->
    [
        'PaymentInfo',
        'Shop',
        'Invoice',
        'InvoicePayment',
        'InvoicePaymentRefund',
        'Cash',
        'Session',
        'Context',
        'ProxyResult',
        'CallbackResult',
        'CallbackProxyResult'
    ].

-spec services() -> [service_name()].

services() ->
    [
        'ProviderProxy',
        'ProviderProxyHost'
    ].

-spec namespace() -> namespace().

namespace() ->
    'prxprv'.

-spec typedef_info(_) -> no_return().

typedef_info(_) -> erlang:error(badarg).

-spec enum_info(_) -> no_return().

enum_info(_) -> erlang:error(badarg).

-spec struct_info(struct_name() | exception_name()) -> struct_info() | no_return().

struct_info('PaymentInfo') ->
    {struct, struct, [
    {1, required, {struct, struct, {dmsl_proxy_provider_thrift, 'Shop'}}, 'shop', undefined},
    {2, required, {struct, struct, {dmsl_proxy_provider_thrift, 'Invoice'}}, 'invoice', undefined},
    {3, required, {struct, struct, {dmsl_proxy_provider_thrift, 'InvoicePayment'}}, 'payment', undefined},
    {4, optional, {struct, struct, {dmsl_proxy_provider_thrift, 'InvoicePaymentRefund'}}, 'refund', undefined}
]};

struct_info('Shop') ->
    {struct, struct, [
    {1, required, string, 'id', undefined},
    {2, required, {struct, struct, {dmsl_domain_thrift, 'Category'}}, 'category', undefined},
    {3, required, {struct, struct, {dmsl_domain_thrift, 'ShopDetails'}}, 'details', undefined},
    {4, required, {struct, union, {dmsl_domain_thrift, 'ShopLocation'}}, 'location', undefined}
]};

struct_info('Invoice') ->
    {struct, struct, [
    {1, required, string, 'id', undefined},
    {2, required, string, 'created_at', undefined},
    {3, required, string, 'due', undefined},
    {7, required, {struct, struct, {dmsl_domain_thrift, 'InvoiceDetails'}}, 'details', undefined},
    {6, required, {struct, struct, {dmsl_proxy_provider_thrift, 'Cash'}}, 'cost', undefined}
]};

struct_info('InvoicePayment') ->
    {struct, struct, [
    {1, required, string, 'id', undefined},
    {2, required, string, 'created_at', undefined},
    {3, optional, {struct, struct, {dmsl_domain_thrift, 'TransactionInfo'}}, 'trx', undefined},
    {4, required, {struct, struct, {dmsl_domain_thrift, 'Payer'}}, 'payer', undefined},
    {5, required, {struct, struct, {dmsl_proxy_provider_thrift, 'Cash'}}, 'cost', undefined}
]};

struct_info('InvoicePaymentRefund') ->
    {struct, struct, [
    {1, required, string, 'id', undefined},
    {2, required, string, 'created_at', undefined},
    {3, optional, {struct, struct, {dmsl_domain_thrift, 'TransactionInfo'}}, 'trx', undefined}
]};

struct_info('Cash') ->
    {struct, struct, [
    {1, required, i64, 'amount', undefined},
    {2, required, {struct, struct, {dmsl_domain_thrift, 'Currency'}}, 'currency', undefined}
]};

struct_info('Session') ->
    {struct, struct, [
    {1, required, {struct, union, {dmsl_domain_thrift, 'TargetInvoicePaymentStatus'}}, 'target', undefined},
    {2, optional, string, 'state', undefined}
]};

struct_info('Context') ->
    {struct, struct, [
    {1, required, {struct, struct, {dmsl_proxy_provider_thrift, 'Session'}}, 'session', undefined},
    {2, required, {struct, struct, {dmsl_proxy_provider_thrift, 'PaymentInfo'}}, 'payment_info', undefined},
    {3, optional, {map, string, string}, 'options', #{}}
]};

struct_info('ProxyResult') ->
    {struct, struct, [
    {1, required, {struct, union, {dmsl_proxy_thrift, 'Intent'}}, 'intent', undefined},
    {2, optional, string, 'next_state', undefined},
    {3, optional, {struct, struct, {dmsl_domain_thrift, 'TransactionInfo'}}, 'trx', undefined}
]};

struct_info('CallbackResult') ->
    {struct, struct, [
    {1, required, string, 'response', undefined},
    {2, required, {struct, struct, {dmsl_proxy_provider_thrift, 'CallbackProxyResult'}}, 'result', undefined}
]};

struct_info('CallbackProxyResult') ->
    {struct, struct, [
    {1, optional, {struct, union, {dmsl_proxy_thrift, 'Intent'}}, 'intent', undefined},
    {2, optional, string, 'next_state', undefined},
    {3, optional, {struct, struct, {dmsl_domain_thrift, 'TransactionInfo'}}, 'trx', undefined}
]};

struct_info(_) -> erlang:error(badarg).

-spec record_name(struct_name() | exception_name()) -> atom() | no_return().

record_name('PaymentInfo') ->
    'prxprv_PaymentInfo';

record_name('Shop') ->
    'prxprv_Shop';

    record_name('Invoice') ->
    'prxprv_Invoice';

    record_name('InvoicePayment') ->
    'prxprv_InvoicePayment';

    record_name('InvoicePaymentRefund') ->
    'prxprv_InvoicePaymentRefund';

    record_name('Cash') ->
    'prxprv_Cash';

    record_name('Session') ->
    'prxprv_Session';

    record_name('Context') ->
    'prxprv_Context';

    record_name('ProxyResult') ->
    'prxprv_ProxyResult';

    record_name('CallbackResult') ->
    'prxprv_CallbackResult';

    record_name('CallbackProxyResult') ->
    'prxprv_CallbackProxyResult';

    record_name(_) -> error(badarg).
    
    -spec functions(service_name()) -> [function_name()] | no_return().

functions('ProviderProxy') ->
    [
        'ProcessPayment',
        'HandlePaymentCallback'
    ];

functions('ProviderProxyHost') ->
    [
        'ProcessCallback'
    ];

functions(_) -> error(badarg).

-spec function_info(service_name(), function_name(), params_type | reply_type | exceptions) ->
    struct_info() | no_return().

function_info('ProviderProxy', 'ProcessPayment', params_type) ->
    {struct, struct, [
    {1, undefined, {struct, struct, {dmsl_proxy_provider_thrift, 'Context'}}, 'context', undefined}
]};
function_info('ProviderProxy', 'ProcessPayment', reply_type) ->
        {struct, struct, {dmsl_proxy_provider_thrift, 'ProxyResult'}};
    function_info('ProviderProxy', 'ProcessPayment', exceptions) ->
        {struct, struct, []};
function_info('ProviderProxy', 'HandlePaymentCallback', params_type) ->
    {struct, struct, [
    {1, undefined, string, 'callback', undefined},
    {2, undefined, {struct, struct, {dmsl_proxy_provider_thrift, 'Context'}}, 'context', undefined}
]};
function_info('ProviderProxy', 'HandlePaymentCallback', reply_type) ->
        {struct, struct, {dmsl_proxy_provider_thrift, 'CallbackResult'}};
    function_info('ProviderProxy', 'HandlePaymentCallback', exceptions) ->
        {struct, struct, []};

function_info('ProviderProxyHost', 'ProcessCallback', params_type) ->
    {struct, struct, [
    {1, undefined, string, 'tag', undefined},
    {2, undefined, string, 'callback', undefined}
]};
function_info('ProviderProxyHost', 'ProcessCallback', reply_type) ->
        string;
    function_info('ProviderProxyHost', 'ProcessCallback', exceptions) ->
        {struct, struct, [
        {1, undefined, {struct, exception, {dmsl_base_thrift, 'InvalidRequest'}}, 'ex1', undefined}
    ]};

function_info(_Service, _Function, _InfoType) -> erlang:error(badarg).
