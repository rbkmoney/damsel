%%
%% Autogenerated by Thrift Compiler (1.0.0-dev)
%%
%% DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
%%

-module(dmsl_pay2card_thrift).

-include("dmsl_pay2card_thrift.hrl").

-export([namespace/0]).
-export([enums/0]).
-export([typedefs/0]).
-export([structs/0]).
-export([services/0]).
-export([typedef_info/1]).
-export([enum_info/1]).
-export([struct_info/1]).
-export([record_name/1]).
-export([functions/1]).
-export([function_info/3]).

-export_type([namespace/0]).
-export_type([typedef_name/0]).
-export_type([enum_name/0]).
-export_type([struct_name/0]).
-export_type([exception_name/0]).
-export_type([service_name/0]).
-export_type([function_name/0]).

-export_type([enum_info/0]).
-export_type([struct_info/0]).

-export_type([
    'Provider'/0
]).
-export_type([
    'Cash'/0,
    'TransferRequest'/0,
    'TransferResult'/0
]).
-export_type([
    'ProviderFailure'/0
]).

-type namespace() :: 'pay2card'.

%%
%% typedefs
%%
-type typedef_name() :: none().


%%
%% enums
%%
-type enum_name() ::
    'Provider'.

%% enum 'Provider'
-type 'Provider'() ::
    alfabank |
    binbank.

%%
%% structs, unions and exceptions
%%
-type struct_name() ::
    'Cash' |
    'TransferRequest' |
    'TransferResult'.

-type exception_name() ::
    'ProviderFailure'.

%% struct 'Cash'
-type 'Cash'() :: #'pay2card_Cash'{}.

%% struct 'TransferRequest'
-type 'TransferRequest'() :: #'pay2card_TransferRequest'{}.

%% struct 'TransferResult'
-type 'TransferResult'() :: #'pay2card_TransferResult'{}.

%% exception 'ProviderFailure'
-type 'ProviderFailure'() :: #'pay2card_ProviderFailure'{}.

%%
%% services and functions
%%
-type service_name() ::
    'Pay2Card'.

-type function_name() ::
    'Pay2Card_service_functions'().

-type 'Pay2Card_service_functions'() ::
    'getFee' |
    'makeTransfer'.

-export_type(['Pay2Card_service_functions'/0]).


-type struct_flavour() :: struct | exception | union.
-type field_num() :: pos_integer().
-type field_name() :: atom().
-type field_req() :: required | optional | undefined.

-type type_ref() :: {module(), atom()}.
-type field_type() ::
    bool | byte | i16 | i32 | i64 | string | double |
{enum, type_ref()} |
{struct, struct_flavour(), type_ref()} |
{list, field_type()} |
{set, field_type()} |
{map, field_type(), field_type()}.

-type struct_field_info() ::
    {field_num(), field_req(), field_type(), field_name(), any()}.
-type struct_info() ::
    {struct, struct_flavour(), [struct_field_info()]}.

-type enum_choice() ::
    'Provider'().

-type enum_field_info() ::
    {enum_choice(), integer()}.
-type enum_info() ::
    {enum, [enum_field_info()]}.

-spec typedefs() -> [].

typedefs() ->
    [].

-spec enums() -> [enum_name()].

enums() ->
    [
        'Provider'
    ].

-spec structs() -> [struct_name()].

structs() ->
    [
        'Cash',
        'TransferRequest',
        'TransferResult'
    ].

-spec services() -> [service_name()].

services() ->
    [
        'Pay2Card'
    ].

-spec namespace() -> namespace().

namespace() ->
    'pay2card'.

-spec typedef_info(_) -> no_return().

typedef_info(_) -> erlang:error(badarg).

-spec enum_info(enum_name()) -> enum_info() | no_return().

enum_info('Provider') ->
    {enum, [
        {alfabank, 0},
        {binbank, 1}
    ]};

enum_info(_) -> erlang:error(badarg).

-spec struct_info(struct_name() | exception_name()) -> struct_info() | no_return().

struct_info('Cash') ->
    {struct, struct, [
    {1, required, i64, 'amount', undefined},
    {2, required, {struct, struct, {dmsl_domain_thrift, 'Currency'}}, 'currency', undefined}
]};

struct_info('TransferRequest') ->
    {struct, struct, [
    {1, required, string, 'request_id', undefined},
    {2, required, string, 'actor_id', undefined},
    {3, required, string, 'card_token', undefined},
    {4, required, {struct, struct, {dmsl_pay2card_thrift, 'Cash'}}, 'cash', undefined}
]};

struct_info('TransferResult') ->
    {struct, struct, [
    {1, required, {enum, {dmsl_pay2card_thrift, 'Provider'}}, 'provider', undefined},
    {2, required, string, 'transaction_id', undefined},
    {3, required, string, 'maskCard', undefined},
    {4, optional, {struct, struct, {dmsl_pay2card_thrift, 'Cash'}}, 'fee', undefined}
]};

struct_info('ProviderFailure') ->
    {struct, exception, [
    {1, required, {enum, {dmsl_pay2card_thrift, 'Provider'}}, 'provider', undefined},
    {2, required, string, 'code', undefined},
    {3, optional, string, 'description', undefined}
]};

struct_info(_) -> erlang:error(badarg).

-spec record_name(struct_name() | exception_name()) -> atom() | no_return().

record_name('Cash') ->
    'pay2card_Cash';

record_name('TransferRequest') ->
    'pay2card_TransferRequest';

    record_name('TransferResult') ->
    'pay2card_TransferResult';

    record_name('ProviderFailure') ->
    'pay2card_ProviderFailure';

    record_name(_) -> error(badarg).
    
    -spec functions(service_name()) -> [function_name()] | no_return().

functions('Pay2Card') ->
    [
        'getFee',
        'makeTransfer'
    ];

functions(_) -> error(badarg).

-spec function_info(service_name(), function_name(), params_type | reply_type | exceptions) ->
    struct_info() | no_return().

function_info('Pay2Card', 'getFee', params_type) ->
    {struct, struct, [
    {1, undefined, string, 'card_token', undefined},
    {2, undefined, {struct, struct, {dmsl_pay2card_thrift, 'Cash'}}, 'cash', undefined}
]};
function_info('Pay2Card', 'getFee', reply_type) ->
        {struct, struct, {dmsl_pay2card_thrift, 'Cash'}};
    function_info('Pay2Card', 'getFee', exceptions) ->
        {struct, struct, [
        {1, undefined, {struct, exception, {dmsl_pay2card_thrift, 'ProviderFailure'}}, 'ex1', undefined}
    ]};
function_info('Pay2Card', 'makeTransfer', params_type) ->
    {struct, struct, [
    {1, undefined, {struct, struct, {dmsl_pay2card_thrift, 'TransferRequest'}}, 'request', undefined}
]};
function_info('Pay2Card', 'makeTransfer', reply_type) ->
        {struct, struct, {dmsl_pay2card_thrift, 'TransferResult'}};
    function_info('Pay2Card', 'makeTransfer', exceptions) ->
        {struct, struct, [
        {1, undefined, {struct, exception, {dmsl_pay2card_thrift, 'ProviderFailure'}}, 'ex1', undefined},
        {2, undefined, {struct, exception, {dmsl_base_thrift, 'InvalidRequest'}}, 'ex2', undefined}
    ]};

function_info(_Service, _Function, _InfoType) -> erlang:error(badarg).
