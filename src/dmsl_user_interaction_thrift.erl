%%
%% Autogenerated by Thrift Compiler (1.0.0-dev)
%%
%% DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
%%

-module(dmsl_user_interaction_thrift).

-include("dmsl_user_interaction_thrift.hrl").

-export([namespace/0]).
-export([enums/0]).
-export([typedefs/0]).
-export([structs/0]).
-export([services/0]).
-export([typedef_info/1]).
-export([enum_info/1]).
-export([struct_info/1]).
-export([record_name/1]).
-export([functions/1]).
-export([function_info/3]).

-export_type([namespace/0]).
-export_type([typedef_name/0]).
-export_type([enum_name/0]).
-export_type([struct_name/0]).
-export_type([exception_name/0]).
-export_type([service_name/0]).
-export_type([function_name/0]).

-export_type([enum_info/0]).
-export_type([struct_info/0]).

-export_type([
    'Template'/0,
    'Form'/0
]).
-export_type([
    'BrowserHTTPRequest'/0,
    'BrowserGetRequest'/0,
    'BrowserPostRequest'/0,
    'PaymentTerminalReceipt'/0,
    'UserInteraction'/0
]).

-type namespace() :: ''.

%%
%% typedefs
%%
-type typedef_name() ::
    'Template' |
    'Form'.

-type 'Template'() :: binary().
-type 'Form'() :: #{binary() => 'Template'()}.

%%
%% enums
%%
-type enum_name() :: none().

%%
%% structs, unions and exceptions
%%
-type struct_name() ::
    'BrowserHTTPRequest' |
    'BrowserGetRequest' |
    'BrowserPostRequest' |
    'PaymentTerminalReceipt' |
    'UserInteraction'.

-type exception_name() :: none().

%% union 'BrowserHTTPRequest'
-type 'BrowserHTTPRequest'() ::
    {'get_request', 'BrowserGetRequest'()} |
    {'post_request', 'BrowserPostRequest'()}.

%% struct 'BrowserGetRequest'
-type 'BrowserGetRequest'() :: #'BrowserGetRequest'{}.

%% struct 'BrowserPostRequest'
-type 'BrowserPostRequest'() :: #'BrowserPostRequest'{}.

%% struct 'PaymentTerminalReceipt'
-type 'PaymentTerminalReceipt'() :: #'PaymentTerminalReceipt'{}.

%% union 'UserInteraction'
-type 'UserInteraction'() ::
    {'redirect', 'BrowserHTTPRequest'()} |
    {'payment_terminal_reciept', 'PaymentTerminalReceipt'()}.

%%
%% services and functions
%%
-type service_name() :: none().

-type function_name() :: none().


-type struct_flavour() :: struct | exception | union.
-type field_num() :: pos_integer().
-type field_name() :: atom().
-type field_req() :: required | optional | undefined.

-type type_ref() :: {module(), atom()}.
-type field_type() ::
    bool | byte | i16 | i32 | i64 | string | double |
{enum, type_ref()} |
{struct, struct_flavour(), type_ref()} |
{list, field_type()} |
{set, field_type()} |
{map, field_type(), field_type()}.

-type struct_field_info() ::
    {field_num(), field_req(), field_type(), field_name(), any()}.
-type struct_info() ::
    {struct, struct_flavour(), [struct_field_info()]}.

-type enum_choice() :: none().

-type enum_field_info() ::
    {enum_choice(), integer()}.
-type enum_info() ::
    {enum, [enum_field_info()]}.

-spec typedefs() -> [typedef_name()].

typedefs() ->
    [
        'Template',
        'Form'
    ].

-spec enums() -> [].

enums() ->
    [].

-spec structs() -> [struct_name()].

structs() ->
    [
        'BrowserHTTPRequest',
        'BrowserGetRequest',
        'BrowserPostRequest',
        'PaymentTerminalReceipt',
        'UserInteraction'
    ].

-spec services() -> [].

services() ->
    [].

-spec namespace() -> namespace().

namespace() ->
    ''.

-spec typedef_info(typedef_name()) -> field_type() | no_return().

typedef_info('Template') ->
    string;

typedef_info('Form') ->
    {map, string, string};

typedef_info(_) -> erlang:error(badarg).

-spec enum_info(_) -> no_return().

enum_info(_) -> erlang:error(badarg).

-spec struct_info(struct_name() | exception_name()) -> struct_info() | no_return().

struct_info('BrowserHTTPRequest') ->
    {struct, union, [
    {1, optional, {struct, struct, {dmsl_user_interaction_thrift, 'BrowserGetRequest'}}, 'get_request', undefined},
    {2, optional, {struct, struct, {dmsl_user_interaction_thrift, 'BrowserPostRequest'}}, 'post_request', undefined}
]};

struct_info('BrowserGetRequest') ->
    {struct, struct, [
    {1, required, string, 'uri', undefined}
]};

struct_info('BrowserPostRequest') ->
    {struct, struct, [
    {1, required, string, 'uri', undefined},
    {2, required, {map, string, string}, 'form', undefined}
]};

struct_info('PaymentTerminalReceipt') ->
    {struct, struct, [
    {1, required, string, 'short_payment_id', undefined},
    {2, required, string, 'due', undefined}
]};

struct_info('UserInteraction') ->
    {struct, union, [
    {1, optional, {struct, union, {dmsl_user_interaction_thrift, 'BrowserHTTPRequest'}}, 'redirect', undefined},
    {2, optional, {struct, struct, {dmsl_user_interaction_thrift, 'PaymentTerminalReceipt'}}, 'payment_terminal_reciept', undefined}
]};

struct_info(_) -> erlang:error(badarg).

-spec record_name(struct_name() | exception_name()) -> atom() | no_return().

record_name('BrowserGetRequest') ->
    'BrowserGetRequest';

record_name('BrowserPostRequest') ->
    'BrowserPostRequest';

    record_name('PaymentTerminalReceipt') ->
    'PaymentTerminalReceipt';

    record_name(_) -> error(badarg).
    
    -spec functions(_) -> no_return().

functions(_) -> error(badarg).

-spec function_info(_,_,_) -> no_return().

function_info(_Service, _Function, _InfoType) -> erlang:error(badarg).
