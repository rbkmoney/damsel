%%
%% Autogenerated by Thrift Compiler (1.0.0-dev)
%%
%% DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
%%

-module(dmsl_withdrawals_domain_thrift).

-include("dmsl_withdrawals_domain_thrift.hrl").

-export([namespace/0]).
-export([enums/0]).
-export([typedefs/0]).
-export([structs/0]).
-export([services/0]).
-export([typedef_info/1]).
-export([enum_info/1]).
-export([struct_info/1]).
-export([record_name/1]).
-export([functions/1]).
-export([function_info/3]).

-export_type([namespace/0]).
-export_type([typedef_name/0]).
-export_type([enum_name/0]).
-export_type([struct_name/0]).
-export_type([exception_name/0]).
-export_type([service_name/0]).
-export_type([function_name/0]).

-export_type([enum_info/0]).
-export_type([struct_info/0]).

-export_type([
    'Withdrawal'/0,
    'Destination'/0,
    'Identity'/0,
    'IdentityDocument'/0,
    'RUSDomesticPassport'/0,
    'ContactDetail'/0
]).

-type namespace() :: 'wthdm'.

%%
%% typedefs
%%
-type typedef_name() :: none().


%%
%% enums
%%
-type enum_name() :: none().

%%
%% structs, unions and exceptions
%%
-type struct_name() ::
    'Withdrawal' |
    'Destination' |
    'Identity' |
    'IdentityDocument' |
    'RUSDomesticPassport' |
    'ContactDetail'.

-type exception_name() :: none().

%% struct 'Withdrawal'
-type 'Withdrawal'() :: #'wthdm_Withdrawal'{}.

%% union 'Destination'
-type 'Destination'() ::
    {'bank_card', dmsl_domain_thrift:'BankCard'()} |
    {'crypto_wallet', dmsl_domain_thrift:'CryptoWallet'()} |
    {'digital_wallet', dmsl_domain_thrift:'DigitalWallet'()}.

%% struct 'Identity'
-type 'Identity'() :: #'wthdm_Identity'{}.

%% union 'IdentityDocument'
-type 'IdentityDocument'() ::
    {'rus_domestic_passport', 'RUSDomesticPassport'()}.

%% struct 'RUSDomesticPassport'
-type 'RUSDomesticPassport'() :: #'wthdm_RUSDomesticPassport'{}.

%% union 'ContactDetail'
-type 'ContactDetail'() ::
    {'email', binary()} |
    {'phone_number', binary()}.

%%
%% services and functions
%%
-type service_name() :: none().

-type function_name() :: none().


-type struct_flavour() :: struct | exception | union.
-type field_num() :: pos_integer().
-type field_name() :: atom().
-type field_req() :: required | optional | undefined.

-type type_ref() :: {module(), atom()}.
-type field_type() ::
    bool | byte | i16 | i32 | i64 | string | double |
{enum, type_ref()} |
{struct, struct_flavour(), type_ref()} |
{list, field_type()} |
{set, field_type()} |
{map, field_type(), field_type()}.

-type struct_field_info() ::
    {field_num(), field_req(), field_type(), field_name(), any()}.
-type struct_info() ::
    {struct, struct_flavour(), [struct_field_info()]}.

-type enum_choice() :: none().

-type enum_field_info() ::
    {enum_choice(), integer()}.
-type enum_info() ::
    {enum, [enum_field_info()]}.

-spec typedefs() -> [].

typedefs() ->
    [].

-spec enums() -> [].

enums() ->
    [].

-spec structs() -> [struct_name()].

structs() ->
    [
        'Withdrawal',
        'Destination',
        'Identity',
        'IdentityDocument',
        'RUSDomesticPassport',
        'ContactDetail'
    ].

-spec services() -> [].

services() ->
    [].

-spec namespace() -> namespace().

namespace() ->
    'wthdm'.

-spec typedef_info(_) -> no_return().

typedef_info(_) -> erlang:error(badarg).

-spec enum_info(_) -> no_return().

enum_info(_) -> erlang:error(badarg).

-spec struct_info(struct_name() | exception_name()) -> struct_info() | no_return().

struct_info('Withdrawal') ->
    {struct, struct, [
    {1, required, {struct, struct, {dmsl_domain_thrift, 'Cash'}}, 'body', undefined},
    {2, required, {struct, union, {dmsl_withdrawals_domain_thrift, 'Destination'}}, 'destination', undefined},
    {3, optional, {struct, struct, {dmsl_withdrawals_domain_thrift, 'Identity'}}, 'sender', undefined},
    {4, optional, {struct, struct, {dmsl_withdrawals_domain_thrift, 'Identity'}}, 'receiver', undefined}
]};

struct_info('Destination') ->
    {struct, union, [
    {1, optional, {struct, struct, {dmsl_domain_thrift, 'BankCard'}}, 'bank_card', undefined},
    {2, optional, {struct, struct, {dmsl_domain_thrift, 'CryptoWallet'}}, 'crypto_wallet', undefined},
    {3, optional, {struct, struct, {dmsl_domain_thrift, 'DigitalWallet'}}, 'digital_wallet', undefined}
]};

struct_info('Identity') ->
    {struct, struct, [
    {1, required, string, 'id', undefined},
    {2, optional, {list, {struct, union, {dmsl_withdrawals_domain_thrift, 'IdentityDocument'}}}, 'documents', undefined},
    {3, optional, {list, {struct, union, {dmsl_withdrawals_domain_thrift, 'ContactDetail'}}}, 'contact', undefined}
]};

struct_info('IdentityDocument') ->
    {struct, union, [
    {1, optional, {struct, struct, {dmsl_withdrawals_domain_thrift, 'RUSDomesticPassport'}}, 'rus_domestic_passport', undefined}
]};

struct_info('RUSDomesticPassport') ->
    {struct, struct, [
    {1, required, string, 'token', undefined},
    {2, optional, string, 'fullname_masked', undefined}
]};

struct_info('ContactDetail') ->
    {struct, union, [
    {1, optional, string, 'email', undefined},
    {2, optional, string, 'phone_number', undefined}
]};

struct_info(_) -> erlang:error(badarg).

-spec record_name(struct_name() | exception_name()) -> atom() | no_return().

record_name('Withdrawal') ->
    'wthdm_Withdrawal';

record_name('Identity') ->
    'wthdm_Identity';

    record_name('RUSDomesticPassport') ->
    'wthdm_RUSDomesticPassport';

    record_name(_) -> error(badarg).
    
    -spec functions(_) -> no_return().

functions(_) -> error(badarg).

-spec function_info(_,_,_) -> no_return().

function_info(_Service, _Function, _InfoType) -> erlang:error(badarg).
