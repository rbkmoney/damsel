%%
%% Autogenerated by Thrift Compiler (1.0.0-dev)
%%
%% DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
%%

-module(dmsl_webhooker_thrift).

-include("dmsl_webhooker_thrift.hrl").

-export([namespace/0]).
-export([enums/0]).
-export([typedefs/0]).
-export([structs/0]).
-export([services/0]).
-export([typedef_info/1]).
-export([enum_info/1]).
-export([struct_info/1]).
-export([record_name/1]).
-export([functions/1]).
-export([function_info/3]).

-export_type([namespace/0]).
-export_type([typedef_name/0]).
-export_type([enum_name/0]).
-export_type([struct_name/0]).
-export_type([exception_name/0]).
-export_type([service_name/0]).
-export_type([function_name/0]).

-export_type([enum_info/0]).
-export_type([struct_info/0]).

-export_type([
    'Url'/0,
    'Key'/0,
    'WebhookID'/0
]).
-export_type([
    'Webhook'/0,
    'WebhookParams'/0,
    'EventFilter'/0,
    'PartyEventFilter'/0,
    'PartyEventType'/0,
    'ClaimEventType'/0,
    'ClaimCreated'/0,
    'ClaimDenied'/0,
    'ClaimAccepted'/0,
    'InvoiceEventFilter'/0,
    'InvoiceEventType'/0,
    'InvoiceCreated'/0,
    'InvoiceStatusChanged'/0,
    'InvoiceStatus'/0,
    'InvoiceUnpaid'/0,
    'InvoicePaid'/0,
    'InvoiceCancelled'/0,
    'InvoiceFulfilled'/0,
    'InvoicePaymentEventType'/0,
    'InvoicePaymentCreated'/0,
    'InvoicePaymentStatusChanged'/0,
    'InvoicePaymentStatus'/0,
    'InvoicePaymentPending'/0,
    'InvoicePaymentProcessed'/0,
    'InvoicePaymentCaptured'/0,
    'InvoicePaymentCancelled'/0,
    'InvoicePaymentRefunded'/0,
    'InvoicePaymentFailed'/0
]).
-export_type([
    'WebhookNotFound'/0
]).

-type namespace() :: 'webhooker'.

%%
%% typedefs
%%
-type typedef_name() ::
    'Url' |
    'Key' |
    'WebhookID'.

-type 'Url'() :: binary().
-type 'Key'() :: binary().
-type 'WebhookID'() :: integer().

%%
%% enums
%%
-type enum_name() :: none().

%%
%% structs, unions and exceptions
%%
-type struct_name() ::
    'Webhook' |
    'WebhookParams' |
    'EventFilter' |
    'PartyEventFilter' |
    'PartyEventType' |
    'ClaimEventType' |
    'ClaimCreated' |
    'ClaimDenied' |
    'ClaimAccepted' |
    'InvoiceEventFilter' |
    'InvoiceEventType' |
    'InvoiceCreated' |
    'InvoiceStatusChanged' |
    'InvoiceStatus' |
    'InvoiceUnpaid' |
    'InvoicePaid' |
    'InvoiceCancelled' |
    'InvoiceFulfilled' |
    'InvoicePaymentEventType' |
    'InvoicePaymentCreated' |
    'InvoicePaymentStatusChanged' |
    'InvoicePaymentStatus' |
    'InvoicePaymentPending' |
    'InvoicePaymentProcessed' |
    'InvoicePaymentCaptured' |
    'InvoicePaymentCancelled' |
    'InvoicePaymentRefunded' |
    'InvoicePaymentFailed'.

-type exception_name() ::
    'WebhookNotFound'.

%% struct 'Webhook'
-type 'Webhook'() :: #'webhooker_Webhook'{}.

%% struct 'WebhookParams'
-type 'WebhookParams'() :: #'webhooker_WebhookParams'{}.

%% union 'EventFilter'
-type 'EventFilter'() ::
    {'party', 'PartyEventFilter'()} |
    {'invoice', 'InvoiceEventFilter'()}.

%% struct 'PartyEventFilter'
-type 'PartyEventFilter'() :: #'webhooker_PartyEventFilter'{}.

%% union 'PartyEventType'
-type 'PartyEventType'() ::
    {'claim', 'ClaimEventType'()}.

%% union 'ClaimEventType'
-type 'ClaimEventType'() ::
    {'created', 'ClaimCreated'()} |
    {'denied', 'ClaimDenied'()} |
    {'accepted', 'ClaimAccepted'()}.

%% struct 'ClaimCreated'
-type 'ClaimCreated'() :: #'webhooker_ClaimCreated'{}.

%% struct 'ClaimDenied'
-type 'ClaimDenied'() :: #'webhooker_ClaimDenied'{}.

%% struct 'ClaimAccepted'
-type 'ClaimAccepted'() :: #'webhooker_ClaimAccepted'{}.

%% struct 'InvoiceEventFilter'
-type 'InvoiceEventFilter'() :: #'webhooker_InvoiceEventFilter'{}.

%% union 'InvoiceEventType'
-type 'InvoiceEventType'() ::
    {'created', 'InvoiceCreated'()} |
    {'status_changed', 'InvoiceStatusChanged'()} |
    {'payment', 'InvoicePaymentEventType'()}.

%% struct 'InvoiceCreated'
-type 'InvoiceCreated'() :: #'webhooker_InvoiceCreated'{}.

%% struct 'InvoiceStatusChanged'
-type 'InvoiceStatusChanged'() :: #'webhooker_InvoiceStatusChanged'{}.

%% union 'InvoiceStatus'
-type 'InvoiceStatus'() ::
    {'unpaid', 'InvoiceUnpaid'()} |
    {'paid', 'InvoicePaid'()} |
    {'cancelled', 'InvoiceCancelled'()} |
    {'fulfilled', 'InvoiceFulfilled'()}.

%% struct 'InvoiceUnpaid'
-type 'InvoiceUnpaid'() :: #'webhooker_InvoiceUnpaid'{}.

%% struct 'InvoicePaid'
-type 'InvoicePaid'() :: #'webhooker_InvoicePaid'{}.

%% struct 'InvoiceCancelled'
-type 'InvoiceCancelled'() :: #'webhooker_InvoiceCancelled'{}.

%% struct 'InvoiceFulfilled'
-type 'InvoiceFulfilled'() :: #'webhooker_InvoiceFulfilled'{}.

%% union 'InvoicePaymentEventType'
-type 'InvoicePaymentEventType'() ::
    {'created', 'InvoicePaymentCreated'()} |
    {'status_changed', 'InvoicePaymentStatusChanged'()}.

%% struct 'InvoicePaymentCreated'
-type 'InvoicePaymentCreated'() :: #'webhooker_InvoicePaymentCreated'{}.

%% struct 'InvoicePaymentStatusChanged'
-type 'InvoicePaymentStatusChanged'() :: #'webhooker_InvoicePaymentStatusChanged'{}.

%% union 'InvoicePaymentStatus'
-type 'InvoicePaymentStatus'() ::
    {'pending', 'InvoicePaymentPending'()} |
    {'processed', 'InvoicePaymentProcessed'()} |
    {'captured', 'InvoicePaymentCaptured'()} |
    {'cancelled', 'InvoicePaymentCancelled'()} |
    {'refunded', 'InvoicePaymentRefunded'()} |
    {'failed', 'InvoicePaymentFailed'()}.

%% struct 'InvoicePaymentPending'
-type 'InvoicePaymentPending'() :: #'webhooker_InvoicePaymentPending'{}.

%% struct 'InvoicePaymentProcessed'
-type 'InvoicePaymentProcessed'() :: #'webhooker_InvoicePaymentProcessed'{}.

%% struct 'InvoicePaymentCaptured'
-type 'InvoicePaymentCaptured'() :: #'webhooker_InvoicePaymentCaptured'{}.

%% struct 'InvoicePaymentCancelled'
-type 'InvoicePaymentCancelled'() :: #'webhooker_InvoicePaymentCancelled'{}.

%% struct 'InvoicePaymentRefunded'
-type 'InvoicePaymentRefunded'() :: #'webhooker_InvoicePaymentRefunded'{}.

%% struct 'InvoicePaymentFailed'
-type 'InvoicePaymentFailed'() :: #'webhooker_InvoicePaymentFailed'{}.

%% exception 'WebhookNotFound'
-type 'WebhookNotFound'() :: #'webhooker_WebhookNotFound'{}.

%%
%% services and functions
%%
-type service_name() ::
    'WebhookManager'.

-type function_name() ::
    'WebhookManager_service_functions'().

-type 'WebhookManager_service_functions'() ::
    'GetList' |
    'Get' |
    'Create' |
    'Delete'.

-export_type(['WebhookManager_service_functions'/0]).


-type struct_flavour() :: struct | exception | union.
-type field_num() :: pos_integer().
-type field_name() :: atom().
-type field_req() :: required | optional | undefined.

-type type_ref() :: {module(), atom()}.
-type field_type() ::
    bool | byte | i16 | i32 | i64 | string | double |
{enum, type_ref()} |
{struct, struct_flavour(), type_ref()} |
{list, field_type()} |
{set, field_type()} |
{map, field_type(), field_type()}.

-type struct_field_info() ::
    {field_num(), field_req(), field_type(), field_name(), any()}.
-type struct_info() ::
    {struct, struct_flavour(), [struct_field_info()]}.

-type enum_choice() :: none().

-type enum_field_info() ::
    {enum_choice(), integer()}.
-type enum_info() ::
    {enum, [enum_field_info()]}.

-spec typedefs() -> [typedef_name()].

typedefs() ->
    [
        'Url',
        'Key',
        'WebhookID'
    ].

-spec enums() -> [].

enums() ->
    [].

-spec structs() -> [struct_name()].

structs() ->
    [
        'Webhook',
        'WebhookParams',
        'EventFilter',
        'PartyEventFilter',
        'PartyEventType',
        'ClaimEventType',
        'ClaimCreated',
        'ClaimDenied',
        'ClaimAccepted',
        'InvoiceEventFilter',
        'InvoiceEventType',
        'InvoiceCreated',
        'InvoiceStatusChanged',
        'InvoiceStatus',
        'InvoiceUnpaid',
        'InvoicePaid',
        'InvoiceCancelled',
        'InvoiceFulfilled',
        'InvoicePaymentEventType',
        'InvoicePaymentCreated',
        'InvoicePaymentStatusChanged',
        'InvoicePaymentStatus',
        'InvoicePaymentPending',
        'InvoicePaymentProcessed',
        'InvoicePaymentCaptured',
        'InvoicePaymentCancelled',
        'InvoicePaymentRefunded',
        'InvoicePaymentFailed'
    ].

-spec services() -> [service_name()].

services() ->
    [
        'WebhookManager'
    ].

-spec namespace() -> namespace().

namespace() ->
    'webhooker'.

-spec typedef_info(typedef_name()) -> field_type() | no_return().

typedef_info('Url') ->
    string;

typedef_info('Key') ->
    string;

typedef_info('WebhookID') ->
    i64;

typedef_info(_) -> erlang:error(badarg).

-spec enum_info(_) -> no_return().

enum_info(_) -> erlang:error(badarg).

-spec struct_info(struct_name() | exception_name()) -> struct_info() | no_return().

struct_info('Webhook') ->
    {struct, struct, [
    {1, required, i64, 'id', undefined},
    {2, required, string, 'party_id', undefined},
    {3, required, {struct, union, {dmsl_webhooker_thrift, 'EventFilter'}}, 'event_filter', undefined},
    {4, required, string, 'url', undefined},
    {5, required, string, 'pub_key', undefined},
    {6, required, bool, 'enabled', undefined}
]};

struct_info('WebhookParams') ->
    {struct, struct, [
    {1, required, string, 'party_id', undefined},
    {2, required, {struct, union, {dmsl_webhooker_thrift, 'EventFilter'}}, 'event_filter', undefined},
    {3, required, string, 'url', undefined}
]};

struct_info('EventFilter') ->
    {struct, union, [
    {1, optional, {struct, struct, {dmsl_webhooker_thrift, 'PartyEventFilter'}}, 'party', undefined},
    {2, optional, {struct, struct, {dmsl_webhooker_thrift, 'InvoiceEventFilter'}}, 'invoice', undefined}
]};

struct_info('PartyEventFilter') ->
    {struct, struct, [
    {1, required, {set, {struct, union, {dmsl_webhooker_thrift, 'PartyEventType'}}}, 'types', undefined}
]};

struct_info('PartyEventType') ->
    {struct, union, [
    {1, optional, {struct, union, {dmsl_webhooker_thrift, 'ClaimEventType'}}, 'claim', undefined}
]};

struct_info('ClaimEventType') ->
    {struct, union, [
    {1, optional, {struct, struct, {dmsl_webhooker_thrift, 'ClaimCreated'}}, 'created', undefined},
    {2, optional, {struct, struct, {dmsl_webhooker_thrift, 'ClaimDenied'}}, 'denied', undefined},
    {3, optional, {struct, struct, {dmsl_webhooker_thrift, 'ClaimAccepted'}}, 'accepted', undefined}
]};

struct_info('ClaimCreated') ->
    {struct, struct, []};

struct_info('ClaimDenied') ->
    {struct, struct, []};

struct_info('ClaimAccepted') ->
    {struct, struct, []};

struct_info('InvoiceEventFilter') ->
    {struct, struct, [
    {1, required, {set, {struct, union, {dmsl_webhooker_thrift, 'InvoiceEventType'}}}, 'types', undefined},
    {2, optional, string, 'shop_id', undefined}
]};

struct_info('InvoiceEventType') ->
    {struct, union, [
    {1, optional, {struct, struct, {dmsl_webhooker_thrift, 'InvoiceCreated'}}, 'created', undefined},
    {2, optional, {struct, struct, {dmsl_webhooker_thrift, 'InvoiceStatusChanged'}}, 'status_changed', undefined},
    {3, optional, {struct, union, {dmsl_webhooker_thrift, 'InvoicePaymentEventType'}}, 'payment', undefined}
]};

struct_info('InvoiceCreated') ->
    {struct, struct, []};

struct_info('InvoiceStatusChanged') ->
    {struct, struct, [
    {1, optional, {struct, union, {dmsl_webhooker_thrift, 'InvoiceStatus'}}, 'value', undefined}
]};

struct_info('InvoiceStatus') ->
    {struct, union, [
    {1, optional, {struct, struct, {dmsl_webhooker_thrift, 'InvoiceUnpaid'}}, 'unpaid', undefined},
    {2, optional, {struct, struct, {dmsl_webhooker_thrift, 'InvoicePaid'}}, 'paid', undefined},
    {3, optional, {struct, struct, {dmsl_webhooker_thrift, 'InvoiceCancelled'}}, 'cancelled', undefined},
    {4, optional, {struct, struct, {dmsl_webhooker_thrift, 'InvoiceFulfilled'}}, 'fulfilled', undefined}
]};

struct_info('InvoiceUnpaid') ->
    {struct, struct, []};

struct_info('InvoicePaid') ->
    {struct, struct, []};

struct_info('InvoiceCancelled') ->
    {struct, struct, []};

struct_info('InvoiceFulfilled') ->
    {struct, struct, []};

struct_info('InvoicePaymentEventType') ->
    {struct, union, [
    {1, optional, {struct, struct, {dmsl_webhooker_thrift, 'InvoicePaymentCreated'}}, 'created', undefined},
    {2, optional, {struct, struct, {dmsl_webhooker_thrift, 'InvoicePaymentStatusChanged'}}, 'status_changed', undefined}
]};

struct_info('InvoicePaymentCreated') ->
    {struct, struct, []};

struct_info('InvoicePaymentStatusChanged') ->
    {struct, struct, [
    {1, optional, {struct, union, {dmsl_webhooker_thrift, 'InvoicePaymentStatus'}}, 'value', undefined}
]};

struct_info('InvoicePaymentStatus') ->
    {struct, union, [
    {1, optional, {struct, struct, {dmsl_webhooker_thrift, 'InvoicePaymentPending'}}, 'pending', undefined},
    {2, optional, {struct, struct, {dmsl_webhooker_thrift, 'InvoicePaymentProcessed'}}, 'processed', undefined},
    {3, optional, {struct, struct, {dmsl_webhooker_thrift, 'InvoicePaymentCaptured'}}, 'captured', undefined},
    {4, optional, {struct, struct, {dmsl_webhooker_thrift, 'InvoicePaymentCancelled'}}, 'cancelled', undefined},
    {5, optional, {struct, struct, {dmsl_webhooker_thrift, 'InvoicePaymentRefunded'}}, 'refunded', undefined},
    {6, optional, {struct, struct, {dmsl_webhooker_thrift, 'InvoicePaymentFailed'}}, 'failed', undefined}
]};

struct_info('InvoicePaymentPending') ->
    {struct, struct, []};

struct_info('InvoicePaymentProcessed') ->
    {struct, struct, []};

struct_info('InvoicePaymentCaptured') ->
    {struct, struct, []};

struct_info('InvoicePaymentCancelled') ->
    {struct, struct, []};

struct_info('InvoicePaymentRefunded') ->
    {struct, struct, []};

struct_info('InvoicePaymentFailed') ->
    {struct, struct, []};

struct_info('WebhookNotFound') ->
    {struct, exception, []};

struct_info(_) -> erlang:error(badarg).

-spec record_name(struct_name() | exception_name()) -> atom() | no_return().

record_name('Webhook') ->
    'webhooker_Webhook';

record_name('WebhookParams') ->
    'webhooker_WebhookParams';

    record_name('PartyEventFilter') ->
    'webhooker_PartyEventFilter';

    record_name('ClaimCreated') ->
    'webhooker_ClaimCreated';

    record_name('ClaimDenied') ->
    'webhooker_ClaimDenied';

    record_name('ClaimAccepted') ->
    'webhooker_ClaimAccepted';

    record_name('InvoiceEventFilter') ->
    'webhooker_InvoiceEventFilter';

    record_name('InvoiceCreated') ->
    'webhooker_InvoiceCreated';

    record_name('InvoiceStatusChanged') ->
    'webhooker_InvoiceStatusChanged';

    record_name('InvoiceUnpaid') ->
    'webhooker_InvoiceUnpaid';

    record_name('InvoicePaid') ->
    'webhooker_InvoicePaid';

    record_name('InvoiceCancelled') ->
    'webhooker_InvoiceCancelled';

    record_name('InvoiceFulfilled') ->
    'webhooker_InvoiceFulfilled';

    record_name('InvoicePaymentCreated') ->
    'webhooker_InvoicePaymentCreated';

    record_name('InvoicePaymentStatusChanged') ->
    'webhooker_InvoicePaymentStatusChanged';

    record_name('InvoicePaymentPending') ->
    'webhooker_InvoicePaymentPending';

    record_name('InvoicePaymentProcessed') ->
    'webhooker_InvoicePaymentProcessed';

    record_name('InvoicePaymentCaptured') ->
    'webhooker_InvoicePaymentCaptured';

    record_name('InvoicePaymentCancelled') ->
    'webhooker_InvoicePaymentCancelled';

    record_name('InvoicePaymentRefunded') ->
    'webhooker_InvoicePaymentRefunded';

    record_name('InvoicePaymentFailed') ->
    'webhooker_InvoicePaymentFailed';

    record_name('WebhookNotFound') ->
    'webhooker_WebhookNotFound';

    record_name(_) -> error(badarg).
    
    -spec functions(service_name()) -> [function_name()] | no_return().

functions('WebhookManager') ->
    [
        'GetList',
        'Get',
        'Create',
        'Delete'
    ];

functions(_) -> error(badarg).

-spec function_info(service_name(), function_name(), params_type | reply_type | exceptions) ->
    struct_info() | no_return().

function_info('WebhookManager', 'GetList', params_type) ->
    {struct, struct, [
    {1, undefined, string, 'party_id', undefined}
]};
function_info('WebhookManager', 'GetList', reply_type) ->
        {list, {struct, struct, {dmsl_webhooker_thrift, 'Webhook'}}};
    function_info('WebhookManager', 'GetList', exceptions) ->
        {struct, struct, []};
function_info('WebhookManager', 'Get', params_type) ->
    {struct, struct, [
    {1, undefined, i64, 'webhook_id', undefined}
]};
function_info('WebhookManager', 'Get', reply_type) ->
        {struct, struct, {dmsl_webhooker_thrift, 'Webhook'}};
    function_info('WebhookManager', 'Get', exceptions) ->
        {struct, struct, [
        {1, undefined, {struct, exception, {dmsl_webhooker_thrift, 'WebhookNotFound'}}, 'ex1', undefined}
    ]};
function_info('WebhookManager', 'Create', params_type) ->
    {struct, struct, [
    {1, undefined, {struct, struct, {dmsl_webhooker_thrift, 'WebhookParams'}}, 'webhook_params', undefined}
]};
function_info('WebhookManager', 'Create', reply_type) ->
        {struct, struct, {dmsl_webhooker_thrift, 'Webhook'}};
    function_info('WebhookManager', 'Create', exceptions) ->
        {struct, struct, []};
function_info('WebhookManager', 'Delete', params_type) ->
    {struct, struct, [
    {1, undefined, i64, 'webhook_id', undefined}
]};
function_info('WebhookManager', 'Delete', reply_type) ->
        {struct, struct, []};
    function_info('WebhookManager', 'Delete', exceptions) ->
        {struct, struct, [
        {1, undefined, {struct, exception, {dmsl_webhooker_thrift, 'WebhookNotFound'}}, 'ex1', undefined}
    ]};

function_info(_Service, _Function, _InfoType) -> erlang:error(badarg).
